var CheckAccountsMG = {
    init: function () {
        $("#loading_div").modal("show");
        ManagementMenuActive.setActive(ManagementMenuEnum.CheckAccounts);
    }
};
CheckAccountsMG.init();
var checkAccountsModule = angular.module("CheckAccountsModule", ["ManagementHttpModule"]);
checkAccountsModule.service("CheckAccountsService", ["ResourceFactory", function (resourceFactory) {
    var service = {};
    service.initialize = function () {
        resourceFactory.bindingDateTimeControl("startTime", "", new Date());
        resourceFactory.bindingDateTimeControl("endTime", "", new Date());
        resourceFactory.bindingDateTimeControl("startTime2", "", new Date());
        resourceFactory.bindingDateTimeControl("endTime2", "", new Date());
        $.formValidator.initConfig({validatorGroup: "4", mode: "AlertTip"});
        $("#jump_page_1").formValidator({validatorGroup: "4"}).functionValidator({fun: resourceFactory.validateNumber});
        $.formValidator.initConfig({validatorGroup: "5", mode: "AlertTip"});
        $("#jump_page_2").formValidator({validatorGroup: "5"}).functionValidator({fun: resourceFactory.validateNumber});
    };
    return service;
}]);
checkAccountsModule.service("AccountService", ["$http", "ManagementHttpService", "ResourceFactory", function ($http, httpHandlerService, resourceFactory) {
    var service = {};
    // 初始化获取列表
    service.getCheckList = function (data, $scope) {
        $scope.btnIsDisabled = true;
        if (data.OrderID) {
            data.OrderID = data.OrderID.replace(/[\r\n ]/g, "");
        }

        try {
            httpHandlerService.getStatementRequest(data, resourceFactory.operateCode.get, function (i) {
                $scope.PayCheckList = [];
                $scope.totalCount = 0;
                $scope.btnIsDisabled = false;
                $("#loading_div").modal("hide");
                $(".data_element").fadeIn();
                if (i.Header.StatusCode == 0) {
                    $scope.PayCheckList = i.Body.OrderList;
                    $scope.totalCount = i.Body.Count;
                    if (!i.Body.Count || i.Body.Count <= data.Count) {
                        $scope.totalPages = 1
                    } else {
                        $scope.totalPages = Math.ceil(i.Body.Count / data.Count)
                    }
                    if ($scope.isSwitchPages) {
                        $scope.currentFivePages = service.calculatePages($scope.totalPages, 1, false)
                    }
                } else {
                    alert(GetErrormsg(i.Header.StatusCode))
                }
            }, function (i) {
                console.log(i)
            })
        } catch (h) {
            console.log(h)
        }
    };

    service.calculatePages = function (l, h, m) {
        var f = [];
        if (!m) {
            if (h > l) {
                return f
            } else {
                var k = Math.floor(l / 5);
                var j = 0;
                if (h >= (1 + k * 5)) {
                    for (var g = h; g <= l; g++) {
                        f.push(g)
                    }
                } else {
                    if (h + 4 >= l) {
                        for (var g = h; g <= l; g++) {
                            f.push(g)
                        }
                    } else {
                        for (var g = h; g <= h + 4; g++) {
                            f.push(g)
                        }
                    }
                }
            }
        } else {
            for (var g = h - 5; g < h; g++) {
                f.push(g)
            }
        }
        return f
    };
    return service;
}]);
checkAccountsModule.service("FundService", ["$http", "ManagementHttpService", "ResourceFactory", function ($http, httpHandlerService, resourceFactory) {
    var service = {};
    // 初始化获取列表
    service.getCheckList = function (data, $scope) {
        $scope.btnIsDisabled = true;
        if (data.OrderID) {
            data.OrderID = data.OrderID.replace(/[\r\n ]/g, "");
        }

        try {
            httpHandlerService.getStatementGroupRequest(data, resourceFactory.operateCode.get, function (i) {
                //httpHandlerService.statisticalOrderRequest(data, resourceFactory.operateCode.get, function (i) {
                $scope.PayCheckList = [];
                $scope.totalCount = 0;
                $scope.btnIsDisabled = false;
                $("#loading_div").modal("hide");
                $(".data_element").fadeIn();
                if (i.Header.StatusCode == 0) {
                    //$scope.PayCheckList = i.Body.List;
                    //$scope.totalCount = i.Body.Count;
                    //if (!i.Body.Count || i.Body.Count <= data.Count) {
                    //    $scope.totalPages = 1
                    //} else {
                    //    $scope.totalPages = Math.ceil(i.Body.Count / data.Count)
                    //}
                    //if ($scope.isSwitchPages) {
                    //    $scope.currentFivePages = service.calculatePages($scope.totalPages, 1, false)
                    //}
                    var list = [];
                    if (i.Body.OrderList) {
                        for (var m = 0; m < i.Body.OrderList.length; m++) {
                            for (var j = 0; j < i.Body.OrderList[m].length; j++) {
                                if (j == 0) {
                                    list.push(JSON.parse(JSON.stringify(i.Body.OrderList[m][j])));
                                    list[m].totalPayAmount = 0;
                                    list[m].totalRefundAmount = 0;
                                }

                                if (parseFloat(i.Body.OrderList[m][j].PayAmount)) {
                                    list[m].totalPayAmount += i.Body.OrderList[m][j].PayAmount;
                                }

                                if (parseFloat(i.Body.OrderList[m][j].RefundAmount)) {
                                    list[m].totalRefundAmount += i.Body.OrderList[m][j].RefundAmount;
                                }
                            }
                        }
                    }

                    $scope.PayCheckList = list;
                } else {
                    alert(GetErrormsg(i.Header.StatusCode))
                }
            }, function (i) {
                console.log(i)
            })
        } catch (h) {
            console.log(h)
        }
    };

    service.calculatePages = function (l, h, m) {
        var f = [];
        if (!m) {
            if (h > l) {
                return f
            } else {
                var k = Math.floor(l / 5);
                var j = 0;
                if (h >= (1 + k * 5)) {
                    for (var g = h; g <= l; g++) {
                        f.push(g)
                    }
                } else {
                    if (h + 4 >= l) {
                        for (var g = h; g <= l; g++) {
                            f.push(g)
                        }
                    } else {
                        for (var g = h; g <= h + 4; g++) {
                            f.push(g)
                        }
                    }
                }
            }
        } else {
            for (var g = h - 5; g < h; g++) {
                f.push(g)
            }
        }
        return f
    };
    return service;
}]);
checkAccountsModule.controller("CheckAccountsController", ["$scope", "CheckAccountsService", "ResourceFactory", function ($scope, CheckAccountsService, ResourceFactory) {
    // 初始化
    $scope.initialize = function () {
        CheckAccountsService.initialize();
        var today = new Date();
        var beginDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 6, 0, 0, 0);
        var endDate = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 23, 59, 59);
        $scope.searchPar_Account = {
            Count: 10,
            Index: 1,
            from: beginDate.Format("yyyy-MM-dd hh:mm:ss"),
            StartTimeText: beginDate.Format("yyyy-MM-dd"),
            to: endDate.Format("yyyy-MM-dd hh:mm:ss"),
            EndTimeText: endDate.Format("yyyy-MM-dd"),
            OrderIDs: "",
            TenantID: ""
        };

        $scope.searchPar_Fund = {
            Count: 10,
            Index: 1,
            from: beginDate.Format("yyyy-MM-dd hh:mm:ss"),
            StartTimeText: beginDate.Format("yyyy-MM-dd"),
            to: endDate.Format("yyyy-MM-dd hh:mm:ss"),
            EndTimeText: endDate.Format("yyyy-MM-dd"),
        };

        $scope.currentUser = ResourceFactory.getDataFromSession("Header");
        setTimeout(function () {
            $scope.fundShow();
        }, 1000);
    };

    $scope.accountShow = function () {
        $scope.isAccount = true;
        $scope.$broadcast('to-account', JSON.stringify($scope.searchPar_Account));
    };

    $scope.customSearchOfAccount = function () {
        $scope.$broadcast('to-account_search', JSON.stringify($scope.searchPar_Account));
    };

    $scope.fundShow = function () {
        $scope.isAccount = false;
        $scope.$broadcast('to-fund', JSON.stringify($scope.searchPar_Fund));
    };

    $scope.customSearchOfFund = function () {
        $scope.$broadcast('to-fund_search', JSON.stringify($scope.searchPar_Fund));
    };

    $scope.downloadExcel = function (type) {
        var url = AshxUrl + "ExcelHandle.ashx?";
        var token = $scope.currentUser.Token;
        var timeStamp = $scope.currentUser.TimeStamp;
        if (type == 0) {
            url += "action=statement";
            url += "&Token=" + token;
            url += "&TimeStamp=" + timeStamp;
            url += "&from=" + $scope.searchPar_Account.StartTimeText;
            url += "&to=" + ($scope.searchPar_Account.EndTimeText ? $scope.searchPar_Account.EndTimeText + "%2023:59:59" : "");
            url += "&OrderIDs=" + $scope.searchPar_Account.OrderIDs;
        } else if (type == 1) {
            url += "action=statistical";
            url += "&Token=" + token;
            url += "&TimeStamp=" + timeStamp;
            url += "&from=" + $scope.searchPar_Fund.StartTimeText;
            url += "&to=" + ($scope.searchPar_Fund.EndTimeText ? $scope.searchPar_Fund.EndTimeText + "%2023:59:59" : "");
        }

        window.open(url);
    };

    $scope.showInputModal = function () {
        $("#noModal").modal("show");
    };

    /*// 类型
     $scope.TypeList = [{
     Value: -1,
     Text: "全部"
     }, {
     Value: 1,
     Text: "预约挂号"
     }, {
     Value: 2,
     Text: "当天挂号"
     }, {
     Value: 4,
     Text: "缴费单"
     }];*/

    $scope.initialize();
}]);
checkAccountsModule.controller("AccountController", ["$scope", "AccountService", "ResourceFactory", function ($scope, AccountService, resourceFactory) {
    $scope.$on('to-account', function (d, data) {
        if (!$scope.searchPar) {
            $scope.searchPar = JSON.parse(data);
        } else {
            var temp = JSON.parse(data);
            $scope.searchPar.StartTimeText = temp.StartTimeText;
            $scope.searchPar.EndTimeText = temp.EndTimeText;
        }

        if (!$scope.initialized) {
            $("#loading_div").modal("show");
            $scope.initialize();
        }
    });

    $scope.$on('to-account_search', function (d, data) {
        if (!$scope.searchPar) {
            $scope.searchPar = JSON.parse(data);
        } else {
            var temp = JSON.parse(data);
            $scope.searchPar.StartTimeText = temp.StartTimeText;
            $scope.searchPar.EndTimeText = temp.EndTimeText;
        }

        $scope.customSearch();
    });

    // 初始化
    $scope.initialize = function () {
        $scope.initialized = true;
        // 分页初始化
        $scope.totalCount = 0;
        $scope.totalPages = 0;
        $scope.currentFivePages = [];
        $scope.currentPageNum = 1;
        $scope.isSwitchPages = true;
        $scope.btnIsDisabled = false;
        if (screen.height <= 768) {
            $scope.pageSizeList = [{Type: 1, Value: 5}, {Type: 2, Value: 10}]
        } else {
            $scope.pageSizeList = [{Type: 1, Value: 10}, {Type: 2, Value: 15}]
        }
        $scope.search();
    };

    // 分页相关
    $scope.jumpToPage = function () {
        if (!$.formValidator.pageIsValid("4")) {
            return
        }

        if ($scope.currentPageNum > $scope.totalPages) {
            alert("对不起，没有当前的页数！")
        } else {
            $scope.searchPar.Index = $scope.currentPageNum;
            $scope.search();
        }
    };
    $scope.prevPages = function () {
        if ($scope.currentFivePages[0] <= 5) {
            alert("对不起，已经在最前了！")
        } else {
            $scope.currentFivePages = FundService.calculatePages($scope.totalPages, $scope.currentFivePages[0], true)
        }
    };
    $scope.nextPages = function () {
        var e = Math.floor($scope.totalPages / 5);
        var d = e * 5 + 1;
        if ($scope.currentFivePages[0] >= d) {
            alert("对不起，已经在最后了！")
        } else {
            $scope.currentFivePages = FundService.calculatePages($scope.totalPages, $scope.currentFivePages[4] + 1, false)
        }
    };
    $scope.isDisabled = function () {
        if (!$scope.searchPar) {
            return true;
        }

        var e = Math.floor($scope.totalPages / 5);
        var d = e * $scope.searchPar.Count + 1;
        if ($scope.currentPageNum >= d) {
            return true
        } else {
            return false
        }
    };
    $scope.switchToCurrentPage = function (d) {
        $("#loading_div").modal("show");
        $scope.currentPageNum = d;
        $scope.isSwitchPages = false;
        $scope.searchPar.Index = d;
        $scope.search();
    };

    $scope.changePageSize = function () {
        $scope.isSwitchPages = true;
        $scope.searchPar.Index = 1;
        $scope.currentPageNum = 1;
        $scope.search();
    };

    /*搜索事件*/
    $scope.search = function () {
        $scope.searchPar.from = $scope.searchPar.StartTimeText;
        $scope.searchPar.to = $scope.searchPar.EndTimeText + " 23:59:59";
        AccountService.getCheckList($scope.searchPar, $scope);
    };

    /*自定义查询事件*/
    $scope.customSearch = function ($event) {
        if (!$scope.searchPar.EndTimeText || !$scope.searchPar.StartTimeText) {
            alert("开始时间和结束时间必须输入");
            return;
        }

        $("#loading_div").modal("show");
        $scope.searchPar.Index = 1;
        $scope.currentPageNum = 1;
        $scope.search();
    };

    // 订单状态
    $scope.showBillStatus = function (status) {
        if (status == 0 || status == 1) {
            return "待支付";
        } else if (status == 4) {
            return "已支付";
        } else if (status == 2) {
            return "欠费";
        } else if (status == 3) {
            return "已完成";
        } else if (status == 5) {
            return "申退中";
        } else {
            return "未知";
        }
    };

    // 退费记录
    $scope.showIsRefund = function (isRefund) {
        if (isRefund) {
            return "已退";
        }

        return "无";
    };

    $scope.displayName = function (name) {
        if (name) {
            return name;
        }

        return "匿名";
    };

    // 退费
    $scope.showRefundReason = function (item) {
        if (confirm("确定退费该订单吗")) {
            $scope.confirmItem = JSON.parse(JSON.stringify(item));
            $scope.confirmItem.RefundReason = "";
            $("#refundReason").modal("show");
        }
    };
}]);
checkAccountsModule.controller("FundController", ["$scope", "FundService", "ResourceFactory", function ($scope, FundService, resourceFactory) {
    $scope.$on('to-fund', function (d, data) {
        if (!$scope.searchPar) {
            $scope.searchPar = JSON.parse(data);
        } else {
            var temp = JSON.parse(data);
            $scope.searchPar.StartTimeText = temp.StartTimeText;
            $scope.searchPar.EndTimeText = temp.EndTimeText;
        }

        if (!$scope.initialized) {
            $scope.initialize();
        }
    });

    $scope.$on('to-fund_search', function (d, data) {
        if (!$scope.searchPar) {
            $scope.searchPar = JSON.parse(data);
        } else {
            var temp = JSON.parse(data);
            $scope.searchPar.StartTimeText = temp.StartTimeText;
            $scope.searchPar.EndTimeText = temp.EndTimeText;
        }

        $scope.customSearch();
    });

    // 初始化
    $scope.initialize = function () {
        $scope.initialized = true;
        // 分页初始化
        $scope.totalCount = 0;
        $scope.totalPages = 0;
        $scope.currentFivePages = [];
        $scope.currentPageNum = 1;
        $scope.isSwitchPages = true;
        $scope.btnIsDisabled = false;
        if (screen.height <= 768) {
            $scope.pageSizeList = [{Type: 1, Value: 5}, {Type: 2, Value: 10}]
        } else {
            $scope.pageSizeList = [{Type: 1, Value: 10}, {Type: 2, Value: 15}]
        }
        $scope.search();
    };

    // 分页相关
    $scope.jumpToPage = function () {
        if (!$.formValidator.pageIsValid("5")) {
            return
        }

        if ($scope.currentPageNum > $scope.totalPages) {
            alert("对不起，没有当前的页数！")
        } else {
            $scope.searchPar.Index = $scope.currentPageNum;
            $scope.search();
        }
    };
    $scope.prevPages = function () {
        if ($scope.currentFivePages[0] <= 5) {
            alert("对不起，已经在最前了！")
        } else {
            $scope.currentFivePages = FundService.calculatePages($scope.totalPages, $scope.currentFivePages[0], true)
        }
    };
    $scope.nextPages = function () {
        var e = Math.floor($scope.totalPages / 5);
        var d = e * 5 + 1;
        if ($scope.currentFivePages[0] >= d) {
            alert("对不起，已经在最后了！")
        } else {
            $scope.currentFivePages = FundService.calculatePages($scope.totalPages, $scope.currentFivePages[4] + 1, false)
        }
    };
    $scope.isDisabled = function () {
        if (!$scope.searchPar) {
            return true;
        }

        var e = Math.floor($scope.totalPages / 5);
        var d = e * $scope.searchPar.Count + 1;
        if ($scope.currentPageNum >= d) {
            return true
        } else {
            return false
        }
    };
    $scope.switchToCurrentPage = function (d) {
        $("#loading_div").modal("show");
        $scope.currentPageNum = d;
        $scope.isSwitchPages = false;
        $scope.searchPar.Index = d;
        $scope.search();
    };

    $scope.changePageSize = function () {
        $scope.isSwitchPages = true;
        $scope.searchPar.Index = 1;
        $scope.currentPageNum = 1;
        $scope.search();
    };

    /*搜索事件*/
    $scope.search = function () {
        $scope.searchPar.from = $scope.searchPar.StartTimeText;
        $scope.searchPar.to = $scope.searchPar.EndTimeText + " 23:59:59";
        FundService.getCheckList($scope.searchPar, $scope);
    };

    /*自定义查询事件*/
    $scope.customSearch = function ($event) {
        if (!$scope.searchPar.EndTimeText || !$scope.searchPar.StartTimeText) {
            alert("开始时间和结束时间必须输入");
            return;
        }

        $("#loading_div").modal("show");
        $scope.searchPar.Index = 1;
        $scope.currentPageNum = 1;
        $scope.search();
    };
}]);
angular.bootstrap($("#main-content"), ["CheckAccountsModule"]);