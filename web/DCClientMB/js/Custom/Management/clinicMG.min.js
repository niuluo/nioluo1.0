var ClinicMG = {
    init: function () {
        $("#loading_div").modal("show");
        ManagementMenuActive.setActive(ManagementMenuEnum.ClinicMG)
    }
};
ClinicMG.init();
var clinicModule = angular.module("ClinicModule", ["ManagementHttpModule"]);
clinicModule.factory("ClinicFactory", [function () {
    return {
        DealClinicRequest: function (b) {
            var a = {};
            if (b != undefined && b != null) {
                a = {
                    ID: b.ID,
                    Logo: b.Logo,
                    BookMobile: b.BookMobile,
                    Address: b.Address,
                    Province: b.Province,
                    City: b.City,
                    District: b.District,
                    Authentication: b.Authentication,
                    Contact: b.Contact,
                    ContactPhone: b.ContactPhone,
                    CreateTime: b.CreateTime,
                    Description: b.Description,
                    Email: b.Email,
                    ExpireTime: b.ExpireTime,
                    Mobile: b.Mobile,
                    Password: b.Password,
                    PasswordReminder: b.PasswordReminder,
                    State: b.State,
                    TenantID: b.TenantID,
                    TenantName: b.TenantName
                }
            }
            return a
        }
    }
}]);
clinicModule.service("ClinicService", ["$http", "ResourceFactory", "ClinicFactory", "ManagementHttpService", function (e, a, b, c) {
    var d = {};
    d.initialize = function () {
        a.bindingDateTimeControl("renewal_date", new Date());
        a.bindingDateTimeControl("inviteCodeExpireTime", new Date());
        $.formValidator.initConfig({validatorGroup: "1", mode: "AlertTip"});
        $($("#createCode input[name='count']")[0]).formValidator({validatorGroup: "1"}).functionValidator({fun: a.validateNumber});
        $($("#createCode input[name='expireTime']")[0]).formValidator({validatorGroup: "1"}).functionValidator({fun: a.validateDate});
        $.formValidator.initConfig({validatorGroup: "3", mode: "AlertTip"});
        $($("#createCode input[name='countDay']")[0]).formValidator({validatorGroup: "3"}).functionValidator({fun: a.validateNumber});
        $($("#createCode input[name='Validity']")[0]).formValidator({validatorGroup: "3"}).functionValidator({fun: a.validateNumber});
        $.formValidator.initConfig({validatorGroup: "2", mode: "AlertTip"});
        $("#jump_page").formValidator({validatorGroup: "2"}).functionValidator({fun: a.validateNumber});
        $.formValidator.initConfig({validatorGroup: "4", mode: "AlertTip"});
        $("#jump_page_1").formValidator({validatorGroup: "4"}).functionValidator({fun: a.validateNumber});
        $.formValidator.initConfig({validatorGroup: "5", mode: "AlertTip"});
        $("#jump_page_2").formValidator({validatorGroup: "5"}).functionValidator({fun: a.validateNumber});
        $.formValidator.initConfig({validatorGroup: "6", mode: "AlertTip"});
        $($("#clinic_info input[name='new_password']")[0]).formValidator({validatorGroup: "6"}).functionValidator({fun: a.validateRequired});
        $($("#clinic_info input[name='confirm_password']")[0]).formValidator({validatorGroup: "6"}).functionValidator({fun: a.validatePassword})
    };
    d.calculatePages = function (l, h, m) {
        var f = [];
        if (!m) {
            if (h > l) {
                return f
            } else {
                var k = Math.floor(l / 5);
                var j = 0;
                if (h >= (1 + k * 5)) {
                    for (var g = h; g <= l; g++) {
                        f.push(g)
                    }
                } else {
                    if (h + 4 >= l) {
                        for (var g = h; g <= l; g++) {
                            f.push(g)
                        }
                    } else {
                        for (var g = h; g <= h + 4; g++) {
                            f.push(g)
                        }
                    }
                }
            }
        } else {
            for (var g = h - 5; g < h; g++) {
                f.push(g)
            }
        }
        return f
    };
    d.getClinics = function (f) {
        f.btnIsDisabled = true;
        if (f.searchRequest.Condition == "" || f.searchRequest.Condition == undefined) {
            f.searchRequest.SearchType = 0
        } else {
            if (a.checkFormat(f.searchRequest.Condition, DataTypeEnum.Number)) {
                f.searchRequest.SearchType = 2
            } else {
                f.searchRequest.SearchType = 1
            }
        }
        var g = {
            SearchType: f.searchRequest.SearchType,
            Condition: f.searchRequest.Condition,
            Count: f.searchRequest.Count,
            Index: f.searchRequest.Index,
            Status: f.searchRequest.Status
        };
        try {
            c.tenantRequest(g, a.operateCode.get, function (i) {
                f.clinicList = "";
                f.totalCount = 0;
                f.btnIsDisabled = false;
                $("#loading_div").modal("hide");
                $(".data_element").fadeIn();
                if (i.Header.StatusCode == 0) {
                    f.clinicList = i.Body.TenantList;
                    f.totalCount = i.Body.Count;
                    if (i.Body.Count <= g.Count) {
                        f.totalPages = 1
                    } else {
                        f.totalPages = Math.ceil(i.Body.Count / g.Count)
                    }
                    if (f.isSwitchPages) {
                        f.currentFivePages = d.calculatePages(f.totalPages, 1, false)
                    }
                } else {
                    alert(GetErrormsg(i.Header.StatusCode))
                }
            }, function (i) {
                console.log(i)
            })
        } catch (h) {
            console.log(h)
        }
    };
    d.updateClinic = function (i, g, f) {
        var h = b.DealClinicRequest(i);
        if (!f) {
            if (g.operateType == 3) {
                h.State = 1
            }
            if (g.operateType == 2) {
                h.State = 0
            }
        }
        try {
            c.tenantRequest(h, a.operateCode.update, function (k) {
                if (k.Header.StatusCode == 0) {
                    alert("更新成功！");
                    if (!f) {
                        d.getClinics(g)
                    } else {
                        g.isReset = false;
                        g.operateTitle = "重置密码"
                    }
                } else {
                    alert(GetErrormsg(k.Header.StatusCode))
                }
            }, function (k) {
                console.log(k)
            })
        } catch (j) {
            console.log(j)
        }
    };
    return d
}]);
clinicModule.controller("ClinicController", ["$scope", "ClinicService", "$location", function (a, b, c) {
    a.openInviteCode = function () {
        a.$broadcast("OpenInviteController", "");
        $("#inviteCode").modal("show")
    };
    a.initialize = function () {
        a.totalCount = 0;
        a.totalPages = 0;
        a.currentFivePages = [];
        a.currentPageNum = 1;
        a.isSwitchPages = true;
        a.btnIsDisabled = false;
        if (screen.height <= 768) {
            a.pageSizeList = [{Type: 1, Value: 5}, {Type: 2, Value: 10}]
        } else {
            a.pageSizeList = [{Type: 1, Value: 10}, {Type: 2, Value: 15}]
        }
        a.ModeList = [{Type: 1, Value: "按截止日期"}, {Type: 2, Value: "按有效时间（天）"}];
        a.clinicStates = [{Type: 0, Name: "全部"}, {Type: 1, Name: "正常"}, {Type: 2, Name: "已冻结"}, {Type: 3, Name: "已过期"}];
        a.searchRequest = {Condition: "", SearchType: 0, Status: 0, Count: 10, Index: 1};
        b.initialize();
        b.getClinics(a)
    };
    a.searchClinic = function () {
        b.getClinics(a)
    };
    a.changePageSize = function () {
        a.isSwitchPages = true;
        a.searchClinic()
    };
    a.getClinicState = function (g, e) {
        g.StateCode = 0;
        if (g.State == 0) {
            var d = new Date();
            var f = new Date(g.ExpireTime);
            if (d >= f) {
                g.StateCode = 1;
                g.OperateTitle = "续期";
                g.OperateTitle1 = "冻结";
                return "已到期"
            } else {
                g.StateCode = 2;
                g.OperateTitle = "续期";
                g.OperateTitle1 = "冻结";
                return "正常"
            }
        } else {
            g.StateCode = 3;
            g.OperateTitle = "激活";
            return "已冻结"
        }
    };
    a.changeClinicState = function (f, e, d) {
        a.operateType = 0;
        a.currentClinic = f;
        switch (f.StateCode) {
            case 1:
            case 2:
                if (e == 1) {
                    $("#renewal").modal("show")
                } else {
                    if (confirm("确定要冻结" + f.TenantName + "吗？")) {
                        a.operateType = 3;
                        b.updateClinic(f, a)
                    }
                }
                break;
            case 3:
                if (confirm("确定要激活" + f.TenantName + "吗？")) {
                    a.operateType = 2;
                    b.updateClinic(f, a)
                }
                break;
            default:
                break
        }
        d.stopPropagation()
    };
    a.saveRenewal = function (e, d) {
        e.ExpireTime = d;
        b.updateClinic(e, a)
    };
    a.jumpToPage = function () {
        if (!$.formValidator.pageIsValid("2")) {
            return
        }
        if (a.currentPageNum > a.totalPages) {
            alert("对不起，没有当前的页数！")
        } else {
            a.searchRequest.Index = a.currentPageNum;
            b.getClinics(a)
        }
    };
    a.prevPages = function () {
        if (a.currentFivePages[0] <= 5) {
            alert("对不起，已经在最前了！")
        } else {
            a.currentFivePages = b.calculatePages(a.totalPages, a.currentFivePages[0], true)
        }
    };
    a.nextPages = function () {
        var e = Math.floor(a.totalPages / 5);
        var d = e * 5 + 1;
        if (a.currentFivePages[0] >= d) {
            alert("对不起，已经在最后了！")
        } else {
            a.currentFivePages = b.calculatePages(a.totalPages, a.currentFivePages[4] + 1, false)
        }
    };
    a.isDisabled = function () {
        var e = Math.floor(a.totalPages / 5);
        var d = e * a.searchRequest.Count + 1;
        if (a.currentPageNum >= d) {
            return true
        } else {
            return false
        }
    };
    a.switchToCurrentPage = function (d) {
        $("#loading_div").modal("show");
        a.currentPageNum = d;
        a.isSwitchPages = false;
        a.searchRequest.Index = d;
        b.getClinics(a)
    };
    a.showClinicDetail = function (d) {
        a.isReset = false;
        a.operateTitle = "重置密码";
        a.newPassword = "";
        a.confirmPassword = "";
        a.currentClinic = d;
        $("#clinic_info").modal("show")
    };
    a.getClinicLogo = function (e) {
        if (e) {
            return FileURL + "Image/" + e
        } else {
            var d = c.absUrl();
            if (d.indexOf("Management") > -1) {
                return "../../Images/loginImg/logo.png"
            } else {
                return "../Images/loginImg/logo.png"
            }
        }
    };
    a.updatePassword = function () {
        if (a.operateTitle == "保存") {
            if (!$.formValidator.pageIsValid("6")) {
                return
            } else {
                a.currentClinic.Password = a.newPassword;
                b.updateClinic(a.currentClinic, a, 1)
            }
        }
        a.isReset = true;
        a.operateTitle = "保存"
    };
    a.initialize()
}]);
clinicModule.service("InviteService", ["$http", "ResourceFactory", "ClinicFactory", "ManagementHttpService", function (e, b, c, d) {
    var a = {};
    a.exportToExcel = function (h, f, i) {
        var g = ManagementWebServer.getUrl("InvitCodeExport");
        g = g + "?Token=" + f.token + "&IsAll=" + h;
        if (!h) {
            g = g + "&CreateTime=" + i
        }
        window.location.href = g
    };
    a.createInviteCode = function (f, g) {
        d.invitCodeRequest(f, b.operateCode.insert, function (h) {
            $("#loading_data_1").fadeOut();
            if (h.Header.StatusCode == 0) {
                $("#code_footer").fadeIn();
                g.createdInviteCodes = h.Body;
                g.totalCodeCount = h.Body.length;
                g.currentCodePageNum = 1;
                if (h.Body.length <= g.inviteCodeRequest.Count) {
                    g.totalCodePages = 1;
                    g.showCreateCodes = h.Body
                } else {
                    g.totalCodePages = Math.ceil(h.Body.length / g.inviteCodeRequest.Count);
                    g.showCreateCodes = g.createdInviteCodes.slice(0, g.inviteCodeRequest.Count)
                }
            } else {
                alert("邀请码生成失败，请稍后重试")
            }
        }, function (h) {
            console.log(h)
        })
    };
    a.getInviteCodes = function (f) {
        var g = f.inviteCodeRequest;
        try {
            d.invitCodeRequest(g, b.operateCode.get, function (i) {
                if (i.Header.StatusCode == 0) {
                    if (i.Body == null || i.Body.length == 0) {
                        alert("没有邀请码")
                    } else {
                        f.totalCount = i.Body.Count;
                        if (i.Body.Count <= g.Count) {
                            f.totalPages = 1
                        } else {
                            f.totalPages = Math.ceil(i.Body.Count / g.Count)
                        }
                    }
                    f.inviteCodes = i.Body.InvitCodeList
                } else {
                    alert("获取邀请码失败，请稍后重试");
                    f.inviteCodes = [{Code: "1", ExpireTime: "1"}, {Code: "2", ExpireTime: "2"}, {
                        Code: "3",
                        ExpireTime: "3"
                    }]
                }
            }, function (i) {
                console.log(i)
            })
        } catch (h) {
            console.log(h)
        }
    };
    return a
}]);
clinicModule.controller("InviteController", ["$scope", "InviteService", "ResourceFactory", function (b, c, a) {
    b.$on("OpenInviteController", function (d, e) {
        b.initialize()
    });
    b.currentUser = a.getDataFromSession("CurrentUser");
    b.token = a.getDataFromSession("Header").Token;
    b.initialize = function () {
        b.createdInviteCodes = [];
        b.inviteCodes = [];
        b.createInviteCode = {};
        b.currentTab = 1;
        b.timeMode = 1;
        b.inviteCodeRequest = {Count: 10, Index: 1}
    };
    b.exportToExcel = function (d) {
        var e = "";
        if (!d) {
            if (b.createdInviteCodes != undefined && b.createdInviteCodes.length > 0) {
                e = b.createdInviteCodes[0].CreateTime
            } else {
                alert("请先创建邀请码！");
                return
            }
        }
        c.exportToExcel(d, b, e)
    };
    b.ModeChoose = function () {
        if (b.timeMode == 1) {
            $(".ExpireTime").css("display", "inline-block");
            $(".Validity").css("display", "none")
        } else {
            if (b.timeMode == 2) {
                $(".Validity").css("display", "inline-block");
                $(".ExpireTime").css("display", "none")
            } else {
                $(".Validity").css("display", "none");
                $(".ExpireTime").css("display", "none")
            }
        }
    };
    b.createInviteCodeClick = function () {
        if (b.timeMode == 1) {
            if (!$.formValidator.pageIsValid("1")) {
                return
            }
            var d = {
                InvitType: 1,
                CreateTime: new Date().Format("yyyy-MM-dd hh:mm:ss"),
                Quantity: b.createInviteCode.Count,
                ExpireTime: b.createInviteCode.ExpireTime
            }
        } else {
            if (b.timeMode == 2) {
                if (!$.formValidator.pageIsValid("3")) {
                    return
                }
                var d = {
                    InvitType: 2,
                    CreateTime: new Date().Format("yyyy-MM-dd hh:mm:ss"),
                    Quantity: b.createInviteCode.dayCount,
                    Validity: b.createInviteCode.Validity
                }
            }
        }
        $("#loading_data_1").fadeIn();
        c.createInviteCode(d, b)
    };
    b.getInviteCodes = function () {
        b.inviteCodes = [];
        c.getInviteCodes(b)
    };
    b.switchTab = function (d) {
        switch (d) {
            case 1:
                b.currentTab = 1;
                break;
            case 2:
                b.currentTab = 2;
                b.getInviteCodes();
                break;
            default:
                break
        }
    };
    b.getCodeState = function (f) {
        var e = new Date().Format("yyyy-MM-dd");
        if (!f.State) {
            if (f.ExpireTime) {
                var d = new Date(f.ExpireTime).Format("yyyy-MM-dd");
                var e = new Date().Format("yyyy-MM-dd");
                return d < e ? "已过期" : "可使用"
            } else {
                return "可使用"
            }
        } else {
            return "已使用"
        }
    };
    b.createCodesJumpToPage = function () {
        if (!$.formValidator.pageIsValid("5")) {
            return
        }
        if (b.currentCodePageNum > b.totalCodePages) {
            alert("对不起，没有当前的页数！")
        } else {
            var d = (b.currentCodePageNum - 1) * b.inviteCodeRequest.Count;
            if ((d + b.inviteCodeRequest.Count) >= b.createdInviteCodes.length) {
                b.showCreateCodes = b.createdInviteCodes.slice(d)
            } else {
                b.showCreateCodes = b.createdInviteCodes.slice(d, (d + b.inviteCodeRequest.Count))
            }
        }
    };
    b.jumpToPage = function () {
        if (!$.formValidator.pageIsValid("4")) {
            return
        }
        if (b.currentPageNum > b.totalPages) {
            alert("对不起，没有当前的页数！")
        } else {
            b.inviteCodeRequest.Index = b.currentPageNum;
            c.getInviteCodes(b)
        }
    };
    b.showTime = function (d) {
        if (d != null) {
            return d.substr(0, 10)
        }
    }
}]);
angular.bootstrap($("#main-content"), ["ClinicModule"]);