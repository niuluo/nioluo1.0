$(document).click(function (a) {
    a = window.event || a;
    obj = $(a.srcElement || a.target);
    if ($(obj).is("#post_card *")) {
    } else {
        if (!($(obj).is(".icon-user[name='currentUser']"))) {
            $("#post_card").slideUp("slow")
        }
    }
    if ($(obj).is("#show_current_patient *") || $(obj).is("a.fc-time-grid-event *")) {
    } else {
        $("#show_current_patient").slideUp("slow")
    }
});
var ResultCodeEnum = (function () {
    var a = {
        Success: 0,
        NoLogin: 1,
        NoPermit: 2,
        NoData: 3,
        Exist: 4,
        ProgramError: 5,
        CatchError: 6,
        ParamError: 7,
        InvokeError: 8,
        NotExist: 9,
        OperateError: 10,
        SMSError: 11,
        VerifyCodeError: 12,
        InvitCodeError: 13,
        RemoteLogin: 14,
        InvitCodeExpire: 15,
        NoDelete: 16,
        NoBind: 17,
        MobileExist: 18,
        UserExist: 19,
        UserNotExist: 20,
        PatientNotExist: 21,
        AppointNotExist: 22,
        UserTypeError: 23,
        LoginError: 24,
        RoleExist: 25,
        RoleNotExist: 26,
        VisitNotExist: 27,
        TenantExist: 28,
        TenantNotExist: 29,
        LogoutError: 30,
        TenantFreeze: 31,
        BillNotExist: 44
    };
    return a
})();
var ResultMessageEnum = (function () {
    var a = {
        Success: "成功",
        NoLogin: "未登录",
        NoPermit: "当前角色没有权限",
        NoData: "没有数据",
        Exist: "已存在",
        ProgramError: "执行错误",
        CatchError: "捕获错误",
        ParamError: "参数错误",
        InvokeError: "内部调用错误",
        NotExist: "不存在",
        OperateError: "操作符错误",
        SMSError: "短信错误",
        VerifyCodeError: "验证码错误",
        InvitCodeError: "邀请码错误",
        RemoteLogin: "异地登录",
        InvitCodeExpire: "邀请码过期",
        NoDelete: "不能删除",
        NoBind: "未绑定",
        MobileExist: "手机号已存在",
        UserExist: "用户已存在",
        UserNotExist: "用户不存在",
        PatientNotExist: "患者不存在",
        AppointNotExist: "预约不存在",
        UserTypeError: "用户类型错误",
        LoginError: "登录错误,用户名不存在或密码错误",
        RoleExist: "角色已存在",
        RoleNotExist: "角色不存在",
        VisitNotExist: "回访不存在",
        TenantExist: "诊所已存在",
        TenantNotExist: "诊所不存在",
        LogoutError: "退出失败",
        TenantFreeze: "诊所冻结",
        BillNotExist: "未查到订单"
    };
    return a
})();
function GetErrormsg(b, a) {
    switch (b) {
        case ResultCodeEnum.Success:
            return ResultMessageEnum.Success;
        case ResultCodeEnum.NoLogin:
            return ResultMessageEnum.NoLogin;
        case ResultCodeEnum.NoPermit:
            return ResultMessageEnum.NoPermit;
        case ResultCodeEnum.NoData:
            return ResultMessageEnum.NoData;
        case ResultCodeEnum.Exist:
            return ResultMessageEnum.Exist;
        case ResultCodeEnum.ProgramError:
            return ResultMessageEnum.ProgramError;
        case ResultCodeEnum.CatchError:
            return ResultMessageEnum.CatchError;
        case ResultCodeEnum.ParamError:
            return ResultMessageEnum.ParamError;
        case ResultCodeEnum.InvokeError:
            return ResultMessageEnum.InvokeError;
        case ResultCodeEnum.NotExist:
            return ResultMessageEnum.NotExist;
        case ResultCodeEnum.OperateError:
            return ResultMessageEnum.OperateError;
        case ResultCodeEnum.SMSError:
            return ResultMessageEnum.SMSError;
        case ResultCodeEnum.VerifyCodeError:
            return ResultMessageEnum.VerifyCodeError;
        case ResultCodeEnum.InvitCodeError:
            return ResultMessageEnum.InvitCodeError;
        case ResultCodeEnum.RemoteLogin:
            return ResultMessageEnum.RemoteLogin;
        case ResultCodeEnum.InvitCodeExpire:
            return ResultMessageEnum.InvitCodeExpire;
        case ResultCodeEnum.NoDelete:
            return ResultMessageEnum.NoDelete;
        case ResultCodeEnum.NoBind:
            return ResultMessageEnum.NoBind;
        case ResultCodeEnum.MobileExist:
            return ResultMessageEnum.MobileExist;
        case ResultCodeEnum.UserExist:
            return ResultMessageEnum.UserExist;
        case ResultCodeEnum.UserNotExist:
            return ResultMessageEnum.UserNotExist;
        case ResultCodeEnum.PatientNotExist:
            return ResultMessageEnum.PatientNotExist;
        case ResultCodeEnum.AppointNotExist:
            return ResultMessageEnum.AppointNotExist;
        case ResultCodeEnum.UserTypeError:
            return ResultMessageEnum.UserTypeError;
        case ResultCodeEnum.LoginError:
            return ResultMessageEnum.LoginError;
        case ResultCodeEnum.RoleExist:
            return ResultMessageEnum.RoleExist;
        case ResultCodeEnum.RoleNotExist:
            return ResultMessageEnum.RoleNotExist;
        case ResultCodeEnum.VisitNotExist:
            return ResultMessageEnum.VisitNotExist;
        case ResultCodeEnum.TenantExist:
            return ResultMessageEnum.TenantExist;
        case ResultCodeEnum.TenantNotExist:
            return ResultMessageEnum.TenantNotExist;
        case ResultCodeEnum.LogoutError:
            return ResultMessageEnum.LogoutError;
        case ResultCodeEnum.TenantFreeze:
            return ResultMessageEnum.TenantFreeze;
        case ResultCodeEnum.BillNotExist:
            return ResultMessageEnum.BillNotExist
    }
}
var ManagementMenuEnum = (function () {
    var a = {ClinicMG: 0, SmsPlatform: 1, UserGroup: 2, CheckAccounts: 3};
    return a
})();
var ManagementMenuActive = {
    setActive: function (a) {
        switch (a) {
            case ManagementMenuEnum.ClinicMG:
                $($(".sub-menu")[ManagementMenuEnum.ClinicMG]).addClass("active");
                break;
            case ManagementMenuEnum.DataStatic:
                $($(".sub-menu")[ManagementMenuEnum.DataStatic]).addClass("active");
                break;
            case ManagementMenuEnum.InformationMG:
                $($(".sub-menu")[ManagementMenuEnum.InformationMG]).addClass("active");
                break;
            case ManagementMenuEnum.SupplerMG:
                $($(".sub-menu")[ManagementMenuEnum.SupplerMG]).addClass("active");
                break;
            case ManagementMenuEnum.SmsPlatform:
                $($(".sub-menu")[ManagementMenuEnum.SmsPlatform]).addClass("active");
                break;
            case ManagementMenuEnum.UserGroup:
                $($(".sub-menu")[ManagementMenuEnum.UserGroup]).addClass("active");
                break;
            case ManagementMenuEnum.CheckAccounts:
                $($(".sub-menu")[ManagementMenuEnum.CheckAccounts]).addClass("active");
                break;
            default:
                break
        }
    }
};
var DataTypeEnum = (function () {
    var a = {
        Required: 0,
        Contract: 1,
        Email: 2,
        Identify: 3,
        Number: 4,
        PhoneMobile: 5,
        PostCode: 6,
        DateFormat: 7,
        Fee: 8,
        Length: 9
    };
    return a
})();
Date.prototype.Format = function (a) {
    var c = {
        "M+": this.getMonth() + 1,
        "d+": this.getDate(),
        "h+": this.getHours(),
        "m+": this.getMinutes(),
        "s+": this.getSeconds(),
        "q+": Math.floor((this.getMonth() + 3) / 3),
        S: this.getMilliseconds()
    };
    if (/(y+)/.test(a)) {
        a = a.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length))
    }
    for (var b in c) {
        if (new RegExp("(" + b + ")").test(a)) {
            a = a.replace(RegExp.$1, (RegExp.$1.length == 1) ? (c[b]) : (("00" + c[b]).substr(("" + c[b]).length)))
        }
    }
    return a
};
//var ManagementBaseURL = "http://www.niuluo-tech.cn:86/api/";
var ManagementBaseURL = "http://www.niuluo-tech.cn:82/api/";
var FileURL = "http://www.niuluo-tech.cn:84/";
var AshxUrl = "http://www.niuluo-tech.cn:82/Ashx/";
var ManagementServerList = [{ActionName: "InvitCode", Url: "InvitCode/InvitCodeCURD"}, {
    ActionName: "InvitCodeExport",
    Url: "InvitCode/InvitCodeExport"
}, {ActionName: "Login", Url: "User/Login"}, {ActionName: "Tenant", Url: "Tenant/TenantCURD"}, {
    ActionName: "User",
    Url: "User/UserDeal"
}, {ActionName: "SMS", Url: "SMS/SMSDeal"}, {ActionName: "Role", Url: "Role/RoleDeal"}, {
    ActionName: "Module",
    Url: "Module/ModuleDeal"
}, {ActionName: "Logout", Url: "User/Logout"}, {ActionName: "Appoint", Url: "Appoint/AppointDeal"},
    {ActionName: "StatisticalOrder", Url: "Bill/StatisticalOrder"},
    {ActionName: "GetStatement", Url: "Bill/GetStatement"},
    {ActionName: "GetStatementGroup", Url: "Bill/GetStatementGroup"}];
var ManagementWebServer = {
    getUrl: function (b) {
        var a = "";
        if (ManagementServerList != undefined && ManagementServerList.length > 0) {
            for (var c = 0; c < ManagementServerList.length; c++) {
                if (ManagementServerList[c].ActionName == b) {
                    a = ManagementBaseURL + ManagementServerList[c].Url;
                    return a
                }
            }
        }
        return a
    }
};
var managementHttpModule = angular.module("ManagementHttpModule", []);
var sessionStorage = window.sessionStorage;
managementHttpModule.factory("ResourceFactory", [function () {
    var a = {};
    a.operateCode = {nothing: 0, get: 1, update: 2, insert: 3};
    a.statusCode = {
        Success: 0,
        NoLogin: 1,
        NoPermit: 2,
        NoData: 3,
        Exist: 4,
        ProgramError: 5,
        CatchError: 6,
        ParamError: 7
    };
    a.deleteDataFromSession = function (b) {
        var c = sessionStorage.getItem(b);
        if (b != null) {
            sessionStorage.removeItem(b)
        }
    };
    a.requestBody = function (b, e, d, c) {
        return {Header: {Token: b, StatusCode: 0, Message: "", OperateCode: e, TimeStamp: c}, Body: d}
    };
    a.saveDataToSession = function (b, d) {
        var c = sessionStorage.getItem(b);
        if (c != null) {
            sessionStorage.removeItem(b)
        }
        if (d != null && d != "" && d != undefined) {
            sessionStorage.setItem(b, JSON.stringify(d))
        }
    };
    a.getDataFromSession = function (b) {
        var c = sessionStorage.getItem(b);
        if (c != null) {
            c = JSON.parse(c)
        }
        return c
    };
    a.bindingDateTimeControl = function (f, c, d) {
        var b = "2999-01-01";
        var e = "1900-01-01";
        if (d != undefined && d != "") {
            b = d
        }
        if (c != undefined && c != "") {
            e = c
        }
        $("#" + f).datetimepicker({
            format: "yyyy-mm-dd",
            language: "fr",
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            forceParse: 0,
            weekStart: 1,
            startDate: e,
            endDate: b
        })
    };
    a.checkFormat = function (e, d, b) {
        if (d == DataTypeEnum.Length) {
            return e.length <= b
        }
        if (e == undefined || e == "" || e == null) {
            return false
        }
        switch (d) {
            case DataTypeEnum.Required:
                return true;
            case DataTypeEnum.Contract:
                var c = /^(\d{3,4}-)?\d{6,8}$/;
                return c.test(e);
            case DataTypeEnum.Email:
                var c = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
                return c.test(e);
            case DataTypeEnum.Identify:
                var c = new RegExp("(^\d{18}$)|(^\d{15}$)");
                return c.test(e);
            case DataTypeEnum.Number:
                var c = /^[0-9]*[1-9][0-9]*$/;
                return c.test(e);
            case DataTypeEnum.PhoneMobile:
                var c = /^1(3|4|5|7|8)\d{9}$/;
                return c.test(e);
            case DataTypeEnum.PostCode:
                var c = /^\d{6}$/;
                return c.test(e);
            case DataTypeEnum.DateFormat:
                var c = /^\d{4}(\-|\/|\.)\d{1,2}\1\d{1,2}$/;
                return c.test(e);
            case DataTypeEnum.Fee:
                var c = /^([1-9][\d]{0,7}|0)(\.[\d]{1,2})?$/;
                return c.test(e);
            default:
                return false;
                break
        }
    };
    a.validateRequired = function (b) {
        if (!b) {
            return "必填项"
        } else {
            return true
        }
    };
    a.validateDate = function (c, b) {
        if (!a.checkFormat(c, DataTypeEnum.DateFormat)) {
            return "日期无效，请重新输入"
        } else {
            return true
        }
    };
    a.validateNumber = function (c, b) {
        if (!a.checkFormat(c, DataTypeEnum.Number)) {
            return "数字无效，请重新输入"
        } else {
            return true
        }
    };
    a.validatePassword = function (c) {
        var b = $("#new_password").val();
        if (c != b) {
            return "两次输入不一致！"
        } else {
            return true
        }
    };
    return a
}]);
managementHttpModule.config(["$httpProvider", function (a) {
    a.defaults.headers.post["Content-Type"] = "application/x-www-form-urlencoded;charset=utf-8"
}]);
managementHttpModule.factory("HttpBaseFactory", ["$location", "$http", "ResourceFactory", function (f, e, a) {
    var d = (new Date()).valueOf();
    var c = {};
    c.getDomain = function () {
        var g = f.protocol() + "://" + f.host() + ":" + f.port();
        return g
    };
    var b = function () {
        var g = a.getDataFromSession("Header");
        if (g != null) {
            return g.Token
        } else {
            if (f.absUrl().lastIndexOf("Login.html") > 0 || f.absUrl().lastIndexOf("Register.html") > 0) {
                return ""
            }
        }
    };
    c.baseRequest = function (h, m, l, g, i) {
        var j = function () {
            a.deleteDataFromSession("CurrentUser");
            a.deleteDataFromSession("Header");
            console.log("removeSession")
        };
        sessionControl = setInterval(j, 3600000);
        var k = a.requestBody(b(), m, l, d);
        e.post(h, k).success(function (n) {
            switch (n.Header.StatusCode) {
                case 1:
                    a.deleteDataFromSession("CurrentUser");
                    a.deleteDataFromSession("Header");
                    window.location.href = "Login.html";
                    alert("登陆超时！");
                    return;
                case 14:
                    a.deleteDataFromSession("CurrentUser");
                    a.deleteDataFromSession("Header");
                    window.location.href = "Login.html";
                    alert("账号异地登陆，请确认账号密码是否被盗！");
                    return;
                case 15:
                    a.deleteDataFromSession("CurrentUser");
                    a.deleteDataFromSession("Header");
                    window.location.href = "Login.html";
                    alert("邀请码过期，请联系管理员！");
                    return;
                default:
                    break
            }
            if (n.Header.TimeStamp != d) {
                return
            }
            if (typeof (g) == "function") {
                g(n)
            } else {
                console.log("此处应是函数");
                throw ("successCallback")
            }
        }).error(function (n) {
            if (typeof (i) == "function") {
                i(n)
            } else {
                console.log("此处应该是函数");
                throw ("errorCallback")
            }
        })
    };
    return c
}]);
managementHttpModule.factory("ManagementHttpRequestFactory", ["HttpBaseFactory", function (b) {
    var a = {};
    a.invitCodeRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("InvitCode"), f, e, c, d)
    };
    a.loginRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("Login"), f, e, c, d)
    };
    a.tenantRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("Tenant"), f, e, c, d)
    };
    a.userRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("User"), f, e, c, d)
    };
    a.smsRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("SMS"), f, e, c, d)
    };
    a.logoutRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("Logout"), f, e, c, d)
    };
    a.appointRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("Appoint"), f, e, c, d)
    };
    a.statisticalOrderRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("StatisticalOrder"), f, e, c, d)
    };
    a.getStatementRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("GetStatement"), f, e, c, d)
    };
    a.getStatementGroupRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("GetStatementGroup"), f, e, c, d)
    };
    return a
}]);
managementHttpModule.service("ManagementHttpService", ["ManagementHttpRequestFactory", function (a) {
    var b = {};
    b.invitCodeRequest = function (e, f, c, d) {
        a.invitCodeRequest(e, f, c, d)
    };
    b.loginRequest = function (e, f, c, d) {
        a.loginRequest(e, f, c, d)
    };
    b.tenantRequest = function (e, f, c, d) {
        a.tenantRequest(e, f, c, d)
    };
    b.userRequest = function (e, f, c, d) {
        a.userRequest(e, f, c, d)
    };
    b.smsRequest = function (e, f, c, d) {
        a.smsRequest(e, f, c, d)
    };
    b.logoutRequest = function (e, f, c, d) {
        a.logoutRequest(e, f, c, d)
    };
    b.appointRequest = function (e, f, c, d) {
        a.appointRequest(e, f, c, d)
    };
    b.statisticalOrderRequest = function (e, f, c, d) {
        a.statisticalOrderRequest(e, f, c, d)
    };
    b.getStatementRequest = function (e, f, c, d) {
        a.getStatementRequest(e, f, c, d)
    };
    b.getStatementGroupRequest = function (e, f, c, d) {
        a.getStatementGroupRequest(e, f, c, d)
    };
    return b
}]);
var managementHeaderModule = angular.module("ManagementHeaderModule", ["ManagementHttpModule"]);
managementHeaderModule.directive("content", function () {
    return {
        restrict: "E",
        template: "<div ng-controller='HeadController'><div class='sidebar-toggle-box' id='current-time'><span>欢迎您，{{currentUser.User.UserName}}</span>&nbsp;&nbsp;<span>[<a href='javascript:void(0);' ng-click='logout();' style='color: lightblue;'>退出</a>]</span></div></div>",
        replace: true
    }
});
managementHeaderModule.service("HeaderService", ["ManagementHttpService", "ResourceFactory", function (c, b) {
    var a = {};
    a.logout = function () {
        var d = {};
        try {
            c.logoutRequest(d, b.operateCode.update, function (e) {
                if (e.Header.StatusCode == 0) {
                    b.deleteDataFromSession("CurrentUser");
                    b.deleteDataFromSession("Header")
                } else {
                    console.log(e)
                }
            }, function (e) {
                console.log(e)
            })
        } catch (f) {
            console.log(f)
        }
    };
    return a
}]);
managementHeaderModule.controller("HeadController", ["$scope", "$location", "ResourceFactory", "HeaderService", function (c, e, b, d) {
    var a = b.getDataFromSession("CurrentUser");
    c.currentUser = {};
    if (a == null && e.absUrl().lastIndexOf("Register.html") <= 0) {
        window.location.href = "Login.html"
    } else {
        c.currentUser = a
    }
    c.logout = function () {
        d.logout();
        window.location.href = "Login.html"
    }
}]);
angular.bootstrap($("header"), ["ManagementHeaderModule"]);
var manageMenuModule = angular.module("ManagementMenuModule", ["ManagementHttpModule"]);
manageMenuModule.factory("menuFactory", [function () {
    return {
        menuList: [{title: "诊所管理", pageUrl: "MBClinicMG.html", icon: "icon-home"}, {
            title: "短信平台",
            pageUrl: "MBSmsPlatform.html",
            icon: "icon-envelope"
        }, {title: "用户管理", pageUrl: "MBUserMG.html", icon: "icon-group"},
            {title: "财务中心", pageUrl: "MBCheckAccounts.html", icon: "icon-money"}],
        DealCurrentUserRequest: function (b) {
            var a = b;
            if (b != undefined && b != null) {
                a = {
                    ID: b.User.ID,
                    UserID: b.User.UserID,
                    UserName: b.User.UserName,
                    Password: b.User.Password,
                    CreateTime: b.User.CreateTime,
                    LoginState: b.User.LoginState,
                    LastLoginTime: b.User.LastLoginTime,
                    Gender: b.User.Gender,
                    Email: b.User.Email,
                    Birthday: b.User.Birthday,
                    Mobile: b.User.Mobile,
                    RoleID: b.User.RoleID,
                    State: b.User.State,
                    UserType: b.User.UserType
                }
            }
            return a
        }
    }
}]);
manageMenuModule.directive("menu", function () {
    return {
        restrict: "E",
        template: "<div id='sidebar'  class='nav-collapse'><div class='menu_icon_user'><a href='javascript:void(0);' class='icon-user icon_user_custom' name='currentUser' ng-click='showCurrentUser($event);'></a></div><ul class='sidebar-menu'><li class='sub-menu' ng-repeat='item in menuList'><a href='{{item.pageUrl}}'><i class='{{item.icon}} menu_icon'></i><span class='menu_font' style='white-space:nowrap;'>{{item.title}}</span></a></li></ul><div><span><img src='../../Images/logo.png' class='menu_logo'/></span></div><div id='post_card'><div class='col-lg-12'><div class='row'><div class='col-lg-4'><div class='menu_icon_user_post'><a href='javascript:void(0);' class='icon_user_custom icon-user'></a></div></div><div class='col-lg-3 post_item'>姓 名：</div><div class='col-lg-3 post_item'>{{currentUser.User.UserName}}</div><br><div class='col-lg-3 post_item'>性 别：</div><div class='col-lg-3 post_item'>{{getGender(currentUser.User.Gender)}}</div><br><div class='col-lg-3 post_item'>职 位：</div><div class='col-lg-3 post_item'>{{getRoleName(currentUser.User.RoleID)}}</div></div><div class='row row_space'><hr style='border:2px dashed #A4AABA;border-bottom:0;border-right:0;border-left:0;width:100%;'/></div><div class='row row_space'><div class='col-lg-6'><span class='icon-user-md post_icon'></span>&nbsp;<a href='javascript:void(0);' ng-click='showPersonInfo();' style='color: white;'>个人信息</a></div></div></div><div class='row post_logout_row'><div class='col-lg-12 post_content'><span class='icon-key post_icon'></span><br><a href='javascript:void(0);' ng-click='logout();'>退 出</a></div></div></div></div>",
        replace: true
    }
});
manageMenuModule.directive("info", function () {
    return {
        restrict: "E",
        template: "<div><div class='modal fade' id='person_info' tabindex='-1' role='dialog' aria-labelledby='myModalLabel' aria-hidden='true' data-backdrop='static'><div class='modal-dialog per_modal_h per_modal_w'><div class='modal-content modal_content_custom'><div class='modal-header modal-header modal_head modal_header_height'><button type='button' class='close' data-dismiss='modal' aria-hidden='true'>&times;</button><span class='head_title'>个人信息</span></div><div class='modal-body per_bd'><div class='per_col_1 per_sp'><div class='per_pic fl_lf'><span class='per_u'><a href='javascript:void(0);' class='menu_icon_hospital_cus icon-user' style='font-size: 70px;'></a></span></div><div class='per_pic fl_lf'><div class='per_item'><span class='per_item span_dis fl_lf'>姓名：</span><span class='per_item span_dis show_item fl_lf' ng-bind='currentUser.User.UserName'></span><span class='per_item hide_item fl_lf'><input name='name' class='form-control' placeholder='姓名' type='text'ng-model='currentUser.User.UserName'></span></div><div class='per_item'><span class='per_item span_dis fl_lf'>性别：</span><span class='per_item span_dis show_item fl_lf' ng-bind='getGender(currentUser.User.Gender)'></span><span class='per_item hide_item fl_lf'><select class='form-control' ng-model='currentUser.User.Gender' ng-options='x.Type as x.Name for x in genders'><option value=''>请选择性别</option></select></span></div></div></div><div class='per_ling_h per_sp'><div class='per_pic fl_lf per_ling_h'><span class='per_ling_h span_dis wid_4 txt_rg fl_lf'>出生日期：</span><span class='per_ling_h show_item span_dis fl_lf' ng-bind='(currentUser.User.Birthday).substring(0, 10)'></span><span class='per_ling_h hide_item fl_lf'><input name='birthDay' id='birthday_user' class='form-control' placeholder='出生日期' type='text' ng-model='currentUser.User.Birthday'></span></div><div class='per_pic per_ling_h fl_lf'><span class='per_ling_h span_dis wid_4 txt_rg fl_lf'>手机号：</span><span class='per_ling_h show_item span_dis fl_lf' ng-bind='currentUser.User.Mobile'></span><span class='per_ling_h hide_item fl_lf'><input name='mobile' class='form-control' placeholder='手机号' type='text' ng-model='currentUser.User.Mobile'></span></div></div><div class='per_ling_h per_sp'><div class='per_pic fl_lf per_ling_h'><span class='per_ling_h span_dis wid_4 txt_rg fl_lf'>角 色：</span><span class='per_ling_h show_item span_dis fl_lf' ng-bind='getRoleName(currentUser.User.RoleID)'></span></div><div class='per_pic per_ling_h fl_lf'><span class='per_ling_h span_dis wid_4 txt_rg fl_lf'>邮 箱：</span><span class='per_ling_h span_dis show_item fl_lf' ng-bind='currentUser.User.Email'></span><span class='per_ling_h hide_item fl_lf'><input name='email' class='form-control' placeholder='邮箱' type='text' ng-model='currentUser.User.Email'></span></div></div><div class='per_foot'><button type='button' class='btn btn-primary' ng-click='editPersonInfo();' ng-if='currentUser.User.UserName != &quot;Administrator&quot;' style='margin: 0 20px 0 0;'>编 辑</button><button type='button' class='btn btn-primary' ng-click='savePersonInfo();'>保 存</button></div></div></div></div>",
        replace: true
    }
});
manageMenuModule.service("MenuService", ["ResourceFactory", "ManagementHttpService", "menuFactory", function (b, c, d) {
    var a = {};
    a.savePersonInfo = function (f) {
        var g = d.DealCurrentUserRequest(f.currentUser);
        try {
            c.userRequest(g, b.operateCode.update, function (e) {
                if (e.Header.StatusCode == 0) {
                    b.getDataFromSession("CurrentUser").User = e;
                    alert("保存成功！");
                    $("#person_info").modal("hide")
                } else {
                    alert("保存失败，请稍候重试！")
                }
            }, function (e) {
                alert(e)
            })
        } catch (h) {
            console.log(h)
        }
    };
    a.logout = function () {
        var f = {};
        try {
            c.logoutRequest(f, b.operateCode.update, function (e) {
                if (e.Header.StatusCode == 0) {
                    b.deleteDataFromSession("CurrentUser");
                    b.deleteDataFromSession("Header")
                } else {
                    console.log(e)
                }
            }, function (e) {
                console.log(e)
            })
        } catch (g) {
            console.log(g)
        }
    };
    return a
}]);
manageMenuModule.controller("MenuController", ["$scope", "menuFactory", "ResourceFactory", "MenuService", function (b, c, a, d) {
    b.initialize = function () {
        b.currentUser = a.getDataFromSession("CurrentUser");
        b.menuList = c.menuList;
        b.genders = [{Type: 1, Name: "男"}, {Type: 2, Name: "女"}];
        var f = "../../Images/logo.ico";
        var e = "纽罗口腔管理平台";
        $("title").html(e);
        $("#icon_link").prop("href", f)
    };
    b.showCurrentUser = function (h) {
        var f = $("#sidebar").width();
        var g = $(h.target).parent()[0].offsetTop;
        var i = $("#post_card");
        i.css({
            position: "absolute",
            left: f,
            top: g,
            "z-index": "1040",
            height: "200px",
            width: "300px",
            "border-radius": "8px",
            "background-color": "#6699CC",
            color: "white"
        });
        i.toggle("slow")
    };
    b.getGender = function (e) {
        switch (e) {
            case 1:
                return "男";
            case 2:
                return "女";
            default:
                return "无"
        }
    };
    b.getRoleName = function (e) {
        return "暂无"
    };
    b.showPersonInfo = function () {
        $("#person_info .show_item").show();
        $("#person_info .hide_item").hide();
        $("#post_card").toggle("hide");
        $("#person_info").modal("show")
    };
    b.editPersonInfo = function () {
        $("#person_info .show_item").css("display", "none");
        $("#person_info .hide_item").css("display", "inline-block")
    };
    b.savePersonInfo = function () {
        d.savePersonInfo(b)
    };
    b.logout = function () {
        d.logout();
        window.location.href = "Login.html"
    };
    b.initialize()
}]);
angular.bootstrap($("aside"), ["ManagementMenuModule"]);