var SystemMG = {
    validateRequired: function (b, a) {
        if (b == "" || b == null) {
            return "请输入项目名称"
        } else {
            return true
        }
    }, validateFee: function (b, a) {
        if (!CommonFun.checkFormat(b, DataTypeEnum.Fee)) {
            return "请输入合法的数据"
        } else {
            return true
        }
    }, init: function () {
        $("#loading_div").modal("show");
        MenuActive.setActive(MenuEnum.SystemSet);
        $.formValidator.initConfig({validatorGroup: "1", mode: "AlertTip"});
        $($("#new_item input[name='itemName']")[0]).formValidator({validatorGroup: "1"}).functionValidator({fun: SystemMG.validateRequired});
        $.formValidator.initConfig({validatorGroup: "2", mode: "AlertTip"});
        $($("#add_item input[name='itemName']")[0]).formValidator({validatorGroup: "2"}).functionValidator({fun: SystemMG.validateRequired});
        $($("#add_item input[name='itemPrice']")[0]).formValidator({validatorGroup: "2"}).functionValidator({fun: SystemMG.validateRequired});
        $($("#add_item input[name='itemUnit']")[0]).formValidator({validatorGroup: "2"}).functionValidator({fun: SystemMG.validateRequired});
        $.formValidator.initConfig({validatorGroup: "3", mode: "AlertTip"});
        $($("#add_item input[name='itemName']")[0]).formValidator({validatorGroup: "3"}).functionValidator({fun: SystemMG.validateRequired});
        $.formValidator.initConfig({validatorGroup: "6", mode: "AlertTip"});
        $($("#add_advice_content textarea[name='adviceContent']")[0]).formValidator({validatorGroup: "6"}).functionValidator({fun: SystemMG.validateRequired})
    }
};
SystemMG.init();
var systemModule = angular.module("SetModule", ["HttpModule", "PermissionModule"]);
systemModule.factory("SetFactory", [function () {
    return {
        DealCostItems: function (a) {
            if (a != undefined && a != null && a.length > 0) {
                for (var b = 0; b < a.length; b++) {
                    if (a[b].Price == null) {
                        a[b].Price = {
                            CostItemID: a[b].CostItemID,
                            CreateTime: "",
                            ID: 0,
                            Price: 0,
                            State: 0,
                            SubCategoryID: a[b].SubCategoryID,
                            Unit: "",
                            TenantID: ""
                        }
                    }
                }
            }
            return a
        }, DealCategoryItemRequest: function (c, b) {
            var a = {};
            if (a != undefined && a != null) {
                a = {
                    ID: c.ID,
                    Name: c.Name,
                    State: c.State,
                    CreateTime: c.CreateTime,
                    TenantID: c.TenantID,
                    CategoryID: c.CategoryID
                };
                switch (b) {
                    case 1:
                        a.CategoryID = c.CategoryID;
                        break;
                    case 2:
                        a.CategoryID = c.CategoryID;
                        a.SubCategoryID = c.SubCategoryID;
                        break;
                    case 3:
                        a.SubCategoryID = c.SubCategoryID;
                        a.AppointItemID = c.AppointItemID;
                    case 4:
                        a.SubCategoryID = c.SubCategoryID;
                        a.RecordItemID = c.RecordItemID;
                        break;
                    case 5:
                        a.SubCategoryID = c.SubCategoryID;
                        a.VisitItemID = c.VisitItemID;
                        break;
                    case 6:
                        a = {
                            Item: {
                                ID: c.Item.ID,
                                Name: c.Item.Name,
                                State: c.Item.State,
                                CreateTime: c.Item.CreateTime,
                                TenantID: c.Item.TenantID,
                                SubCategoryID: c.Item.SubCategoryID,
                                CostItemID: c.Item.CostItemID
                            },
                            Price: {
                                ID: c.Price.ID,
                                CostItemID: c.Price.CostItemID,
                                SubCategoryID: c.Price.SubCategoryID,
                                Unit: c.Price.Unit,
                                Price: c.Price.Price,
                                State: c.Price.State,
                                TenantID: c.Price.TenantID,
                                CreateTime: c.Price.CreateTime
                            }
                        };
                        break;
                    case 7:
                        a.RecordItemID = c.RecordItemID;
                        a.TemplateID = c.TemplateID;
                        break;
                    default:
                        break
                }
            }
            return a
        }, DefaultMedicalTemplate: function (a, b) {
            return [{
                Category: 1,
                CategoryName: "主诉",
                Contents: [{ID: 0, Category: 1, Content: "", State: 0, TenantID: b, TemplateID: a, CreateTime: ""}]
            }, {
                Category: 2,
                CategoryName: "现病史",
                Contents: [{ID: 0, Category: 2, Content: "", State: 0, TenantID: b, TemplateID: a, CreateTime: ""}]
            }, {
                Category: 3,
                CategoryName: "既往史",
                Contents: [{ID: 0, Category: 3, Content: "", State: 0, TenantID: b, TemplateID: a, CreateTime: ""}]
            }, {
                Category: 4,
                CategoryName: "过敏史",
                Contents: [{ID: 0, Category: 4, Content: "", State: 0, TenantID: b, TemplateID: a, CreateTime: ""}]
            }, {
                Category: 5,
                CategoryName: "检查",
                Contents: [{ID: 0, Category: 5, Content: "", State: 0, TenantID: b, TemplateID: a, CreateTime: ""}]
            }, {
                Category: 6,
                CategoryName: "辅助检查",
                Contents: [{ID: 0, Category: 6, Content: "", State: 0, TenantID: b, TemplateID: a, CreateTime: ""}]
            }, {
                Category: 7,
                CategoryName: "诊断",
                Contents: [{ID: 0, Category: 7, Content: "", State: 0, TenantID: b, TemplateID: a, CreateTime: ""}]
            }, {
                Category: 8,
                CategoryName: "治疗",
                Contents: [{ID: 0, Category: 8, Content: "", State: 0, TenantID: b, TemplateID: a, CreateTime: ""}]
            }]
        }, DealMedicalTemplateContent: function (c) {
            if (c != undefined && c != null && c.length > 0) {
                for (var b = 0; b < c.length; b++) {
                    c[b].IsReadOnly = true;
                    if (!c[b].Contents[0].TenantID) {
                        c[b].isSelf = false
                    } else {
                        c[b].isSelf = true
                    }
                    switch (c[b].Category) {
                        case 1:
                            c[b].CategoryName = "主诉";
                            c[b].Content = "";
                            for (var a = 0; a < c[b].Contents.length; a++) {
                                if (c[b].Content == "") {
                                    c[b].Content = c[b].Contents[a].Content
                                } else {
                                    c[b].Content = c[b].Content + "；" + c[b].Contents[a].Content
                                }
                            }
                            break;
                        case 2:
                            c[b].CategoryName = "现病史";
                            c[b].Content = "";
                            for (var a = 0; a < c[b].Contents.length; a++) {
                                if (c[b].Content == "") {
                                    c[b].Content = c[b].Contents[a].Content
                                } else {
                                    c[b].Content = c[b].Content + "；" + c[b].Contents[a].Content
                                }
                            }
                            break;
                        case 3:
                            c[b].CategoryName = "既往史";
                            c[b].Content = "";
                            for (var a = 0; a < c[b].Contents.length; a++) {
                                if (c[b].Content == "") {
                                    c[b].Content = c[b].Contents[a].Content
                                } else {
                                    c[b].Content = c[b].Content + "；" + c[b].Contents[a].Content
                                }
                            }
                            break;
                        case 4:
                            c[b].CategoryName = "过敏史";
                            c[b].Content = "";
                            for (var a = 0; a < c[b].Contents.length; a++) {
                                if (c[b].Content == "") {
                                    c[b].Content = c[b].Contents[a].Content
                                } else {
                                    c[b].Content = c[b].Content + "；" + c[b].Contents[a].Content
                                }
                            }
                            break;
                        case 5:
                            c[b].CategoryName = "检查";
                            c[b].Content = "";
                            for (var a = 0; a < c[b].Contents.length; a++) {
                                if (c[b].Content == "") {
                                    c[b].Content = c[b].Contents[a].Content
                                } else {
                                    c[b].Content = c[b].Content + "；" + c[b].Contents[a].Content
                                }
                            }
                            break;
                        case 6:
                            c[b].CategoryName = "辅助检查";
                            c[b].Content = "";
                            for (var a = 0; a < c[b].Contents.length; a++) {
                                if (c[b].Content == "") {
                                    c[b].Content = c[b].Contents[a].Content
                                } else {
                                    c[b].Content = c[b].Content + "；" + c[b].Contents[a].Content
                                }
                            }
                            break;
                        case 7:
                            c[b].CategoryName = "诊断";
                            c[b].Content = "";
                            for (var a = 0; a < c[b].Contents.length; a++) {
                                if (c[b].Content == "") {
                                    c[b].Content = c[b].Contents[a].Content
                                } else {
                                    c[b].Content = c[b].Content + "；" + c[b].Contents[a].Content
                                }
                            }
                            break;
                        case 8:
                            c[b].CategoryName = "治疗";
                            c[b].Content = "";
                            for (var a = 0; a < c[b].Contents.length; a++) {
                                if (c[b].Content == "") {
                                    c[b].Content = c[b].Contents[a].Content
                                } else {
                                    c[b].Content = c[b].Content + "；" + c[b].Contents[a].Content
                                }
                            }
                            break;
                        default:
                            break
                    }
                }
            }
        }, DealMedicalTemplateRequest: function (b, d) {
            var a = [];
            var e = CommonFun.getDataFromSession("CurrentUser").Body.Tenant;
            if (b != undefined && b != null && b.length > 0) {
                for (var c = 0; c < b.length; c++) {
                    a.push({Category: b[c].Category, Contents: b[c].Contents})
                }
            }
            return a
        }
    }
}]);
systemModule.service("SetService", ["HttpService", "ResourceFactory", "SetFactory", "PermissionFactory", function (d, b, g, a) {
    var c = {};
    var e = null;
    var f = function (h, i, j) {
        $("#appoint_items").css("display", "none");
        $("#cost_items").css("display", "none");
        $("#cost_items_title").css("display", "none");
        $("#visit_items").css("display", "none");
        $("#record_items").css("display", "none");
        $("#sec_category").css("display", "none");
        $("#sub_items").css("display", "none");
        $("#advice_sub_items").css("display", "none");
        e.currentMedicalContent = "";
        switch (i) {
            case 1:
                e.currentView = {ItemsTitle: "预约项目设置", AddTitle: "新增预约项目", ViewType: 1, CategoryInfo: j};
                $("#appoint_items").css("display", "block");
                break;
            case 2:
                e.currentView = {ItemsTitle: "回访项目设置", AddTitle: "新增回访项目", ViewType: 3, CategoryInfo: j};
                $("#visit_items").css("display", "block");
                break;
            case 3:
                e.currentView = {ItemsTitle: "收费项目设置", AddTitle: "新增收费项目", ViewType: 2, CategoryInfo: j};
                $("#cost_items_title").css("display", "block");
                $("#cost_items").css("display", "block");
                break;
            case 4:
                e.currentView = {ItemsTitle: "病历项目设置", AddTitle: "新增病历项目", ViewType: 4, CategoryInfo: j};
                $("#record_items").css("display", "block");
                break;
            case 5:
                e.currentView = {ItemsTitle: "病历项目设置", AddTitle: "新增病历项目", ViewType: 5, CategoryInfo: j};
                $("#record_items").css("display", "block");
                break;
            case 6:
                e.currentView = {ItemsTitle: "二级目录设置", AddTitle: "新增二级目录", ViewType: 6, CategoryInfo: j};
                $("#sub_items").css("display", "block");
                break;
            case 7:
                e.currentView = {ItemsTitle: "医嘱项目", AddTitle: "新增项目", ViewType: 7, CategoryInfo: j};
                $("#advice_sub_items").css("display", "block");
                break;
            default:
                break
        }
    };
    c.getCatalogItems = function (h, j) {
        var i = {TenantID: CommonFun.getDataFromSession("CurrentUser").Body.Tenant.TenantID};
        if (j != undefined && j == "") {
            i.CategoryID = j
        }
        e = h;
        try {
            d.subCatalogRequest(i, b.operateCode.get, function (l) {
                $(".body_hide").css("opacity", "1");
                $("#loading_div").modal("hide");
                if (l.Header.StatusCode == 0) {
                    if (j == undefined) {
                        h.CatalogItems = l.Body;
                        h.createTree(h.CatalogItems)
                    }
                    h.SubItems = h.CatalogItems[0].SubCategories;
                    f(h, 6, "")
                } else {
                    c.alert(GetErrormsg(l.Header.StatusCode))
                }
            }, function (l) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(l)
            })
        } catch (k) {
            console.log(k)
        }
    };
    c.switchView = function (h) {
        e.SubItems = h.SubCategories;
        f(e, 6, h);
        e.$apply()
    };
    c.getAppointments = function (h, j) {
        var i = {
            TenantID: CommonFun.getDataFromSession("CurrentUser").Body.Tenant.TenantID,
            CategoryID: j.CategoryID,
            SubCategoryID: j.SubCategoryID
        };
        $("#loading_div").modal("show");
        f(e, 1, i);
        try {
            d.appointmentItemsRequest(i, b.operateCode.get, function (l) {
                $("#loading_div").modal("hide");
                if (l.Header.StatusCode == 0) {
                    e.AppointItems = l.Body
                } else {
                    c.alert(GetErrormsg(l.Header.StatusCode))
                }
            }, function (l) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(l)
            })
        } catch (k) {
            console.log(k)
        }
    };
    c.getCostItems = function (h, j) {
        $("#loading_div").modal("show");
        var i = {
            TenantID: CommonFun.getDataFromSession("CurrentUser").Body.Tenant.TenantID,
            CategoryID: j.CategoryID,
            SubCategoryID: j.SubCategoryID
        };
        f(e, 3, i);
        try {
            d.costItemsRequest(i, b.operateCode.get, function (l) {
                $("#loading_div").modal("hide");
                if (l.Header.StatusCode == 0) {
                    e.CostItems = g.DealCostItems(l.Body)
                } else {
                    c.alert(GetErrormsg(l.Header.StatusCode))
                }
            }, function (l) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(l)
            })
        } catch (k) {
            console.log(k)
        }
    };
    c.getVisitItems = function (h, j) {
        $("#loading_div").modal("show");
        var i = {
            TenantID: CommonFun.getDataFromSession("CurrentUser").Body.Tenant.TenantID,
            CategoryID: j.CategoryID,
            SubCategoryID: j.SubCategoryID
        };
        f(e, 2, i);
        try {
            d.visitItemsRequest(i, b.operateCode.get, function (l) {
                $("#loading_div").modal("hide");
                if (l.Header.StatusCode == 0) {
                    e.VisitItems = l.Body
                } else {
                    c.alert(GetErrormsg(l.Header.StatusCode))
                }
            }, function (l) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(l)
            })
        } catch (k) {
            console.log(k)
        }
    };
    c.getMedicalItems = function (h, l, k, j) {
        var i = {
            TenantID: CommonFun.getDataFromSession("CurrentUser").Body.Tenant.TenantID,
            CategoryID: l.CategoryID,
            SubCategoryID: l.SubCategoryID
        };
        f(e, 4, i);
        h.currentView.ThirdItemsTitle = "病历模版内容";
        try {
            d.recordItemsRequest(i, b.operateCode.get, function (n) {
                if (n.Header.StatusCode == 0) {
                    k.removeChildNodes();
                    e.RecordItems = n.Body;
                    if (e.RecordItems == null || e.RecordItems.length == 0) {
                        if (j.button == 0) {
                            c.alert("没有病例项目！")
                        }
                    } else {
                        var p = "icon-medkit";
                        for (var o = 0; o < e.RecordItems.length; o++) {
                            k.createChildNode(e.RecordItems[o].Name, false, p, null, (e.RecordItems[o].TenantID ? "context2" : ""), JSON.stringify(e.RecordItems[o]), 4, function (r) {
                                var q = $.parseJSON(r);
                                c.getMedicalTemplateByItem(q)
                            })
                        }
                        k.expanded = false;
                        k.expandNode()
                    }
                } else {
                    c.alert(GetErrormsg(n.Header.StatusCode))
                }
            }, function (n) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(n)
            })
        } catch (m) {
            console.log(m)
        }
    };
    c.getMedicalTemplateByItem = function (h) {
        $("#loading_div").modal("show");
        var i = {
            TenantID: CommonFun.getDataFromSession("CurrentUser").Body.Tenant.TenantID,
            RecordItemID: h.RecordItemID
        };
        e.currentView = {ItemsTitle: "病历项目设置", AddTitle: "新增病历模版", ViewType: 5, CategoryInfo: h};
        e.currentView.ThirdItemsTitle = "病历模版内容";
        f(e, 5, i);
        try {
            d.medicalTemplateRequest(i, b.operateCode.get, function (k) {
                $("#loading_div").modal("hide");
                if (k.Header.StatusCode == 0) {
                    e.RecordTemplateItems = k.Body
                } else {
                    c.alert(GetErrormsg(k.Header.StatusCode))
                }
            }, function (k) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(k)
            })
        } catch (j) {
            console.log(j)
        }
    };
    c.saveAppointItem = function (i, j) {
        var h = g.DealCategoryItemRequest(i, 3);
        var l = "";
        if (j == 1) {
            l = b.operateCode.insert
        } else {
            l = b.operateCode.update
        }
        try {
            d.appointmentItemsRequest(h, l, function (m) {
                if (m.Header.StatusCode == 0) {
                    $("#new_item").modal("hide");
                    if (j == 1) {
                        $("#add_item").modal("hide");
                        e.AppointItems.push(m.Body);
                        c.alert("新增成功！")
                    } else {
                        c.alert("更新成功！");
                        i.isEdit = false;
                        c.getAppointments(e, h)
                    }
                } else {
                    c.alert(GetErrormsg(m.Header.StatusCode))
                }
            }, function (m) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(m)
            })
        } catch (k) {
            console.log(k)
        }
    };
    c.saveCostItem = function (i, j) {
        var h = g.DealCategoryItemRequest(i, 6);
        var l = "";
        if (j == 1) {
            l = b.operateCode.insert
        } else {
            l = b.operateCode.update
        }
        try {
            d.costItemsRequest(h, l, function (n) {
                if (n.Header.StatusCode == 0) {
                    if (j == 1) {
                        $("#add_item").modal("hide");
                        e.CostItems.push(n.Body);
                        c.alert("新增成功！")
                    } else {
                        c.alert("更新成功！");
                        i.isEdit = false;
                        var m = {
                            TenantID: CommonFun.getDataFromSession("CurrentUser").Body.Tenant.TenantID,
                            CategoryID: h.Item.CategoryID,
                            SubCategoryID: h.Item.SubCategoryID
                        };
                        c.getCostItems(e, m)
                    }
                } else {
                    c.alert(GetErrormsg(n.Header.StatusCode))
                }
            }, function (m) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(m)
            })
        } catch (k) {
            console.log(k)
        }
    };
    c.saveVisitItem = function (i, j) {
        var h = g.DealCategoryItemRequest(i, 5);
        var l = "";
        if (j == 1) {
            l = b.operateCode.insert
        } else {
            l = b.operateCode.update
        }
        try {
            d.visitItemsRequest(h, l, function (m) {
                if (m.Header.StatusCode == 0) {
                    if (j == 1) {
                        $("#add_item").modal("hide");
                        e.VisitItems.push(m.Body);
                        c.alert("新增成功！")
                    } else {
                        c.alert("更新成功！");
                        i.isEdit = false;
                        c.getVisitItems(e, h)
                    }
                } else {
                    c.alert(GetErrormsg(m.Header.StatusCode))
                }
            }, function (m) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(m)
            })
        } catch (k) {
            console.log(k)
        }
    };
    c.saveMedicalCategory = function (h, k) {
        var i = g.DealCategoryItemRequest(h.newItem, 4);
        try {
            d.recordItemsRequest(i, b.operateCode.insert, function (l) {
                if (l.Header.StatusCode == 0) {
                    h.RecordItems.push(l.Body);
                    k.createChildNode(i.Name, false, "icon-medkit", null, "", JSON.stringify(l.Body), 4, function (n) {
                        var m = $.parseJSON(n);
                        c.getMedicalTemplateByItem(m)
                    });
                    $("#new_item").modal("hide");
                    c.alert("新增成功！")
                } else {
                    c.alert(GetErrormsg(l.Header.StatusCode))
                }
            }, function (l) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(l)
            })
        } catch (j) {
            console.log(j)
        }
    };
    c.saveMedicalTemplate = function (i, j) {
        var h = g.DealCategoryItemRequest(i, 7);
        var l = "";
        if (j == 1) {
            l = b.operateCode.insert
        } else {
            l = b.operateCode.update
        }
        try {
            d.medicalTemplateRequest(h, l, function (m) {
                if (m.Header.StatusCode == 0) {
                    if (j == 1) {
                        $("#add_item").modal("hide");
                        e.RecordTemplateItems.push(m.Body);
                        c.alert("新增成功！")
                    } else {
                        i.isEdit = false;
                        e.currentMedicalContent = null;
                        if (h.State == 1) {
                            for (var n = 0; n < e.RecordTemplateItems.length; n++) {
                                if (e.RecordTemplateItems[n].TemplateID == h.TemplateID) {
                                    e.RecordTemplateItems.splice(n, 1)
                                }
                            }
                        }
                    }
                } else {
                    c.alert(GetErrormsg(m.Header.StatusCode))
                }
            }, function (m) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(m)
            })
        } catch (k) {
            console.log(k)
        }
    };
    c.saveMedicalTemplateContent = function (h) {
        var i = g.DealMedicalTemplateRequest(h.currentMedicalContent, h.operateType);
        var k = b.operateCode.update;
        try {
            d.medicalTemplateContentRequest(i, k, function (l) {
                if (l.Header.StatusCode == 0) {
                    h.currentMedicalContent = l.Body;
                    g.DealMedicalTemplateContent(h.currentMedicalContent);
                    if (h.operateType == 1) {
                        c.alert("新增成功！")
                    } else {
                        c.alert("更新成功！")
                    }
                } else {
                    c.alert(GetErrormsg(l.Header.StatusCode))
                }
            }, function (l) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(l)
            })
        } catch (j) {
            console.log(j)
        }
    };
    c.saveSubCategoryItem = function (i, l) {
        var h = g.DealCategoryItemRequest(i, 2);
        var k = "";
        if (e.operateType == 1) {
            k = b.operateCode.insert
        } else {
            k = b.operateCode.update
        }
        try {
            d.subCatalogRequest(h, k, function (q) {
                if (q.Header.StatusCode == 0) {
                    if (e.operateType == 1) {
                        for (var s = 0; s < e.CatalogItems.length; s++) {
                            if (h.CategoryID == e.CatalogItems[s].Category.CategoryID) {
                                e.CatalogItems[s].SubCategories.push(q.Body);
                                break
                            }
                        }
                        e.SubItems.push(q.Body);
                        var w = l.createChildNode(h.Name, false, "icon-folder-close-alt", null, "context2", JSON.stringify(q.Body), 2);
                        var u = [
                            {ID: 0, Name: "预约项目"},
                            {ID: 1, Name: "回访项目"},
                            {ID: 2, Name: "收费项目"},
                            {
                                ID: 3,
                                Name: "病例模板"
                            },
                            {ID: 4, Name: "医嘱项目"}
                        ];
                        for (var p = 0; p < u.length; p++) {
                            var n = {Category: q.Body, Item: u[p]};
                            var r = JSON.stringify(n);
                            var t = (u[p].ID == 3) ? "icon-folder-close-alt" : "icon-medkit";
                            var o = (u[p].ID == 3) ? "context1" : "";
                            var v = w.createChildNode(u[p].Name, false, t, null, o, r, 3, function (y, x) {
                                var m = $.parseJSON(y);
                                switch (m.Item.ID) {
                                    case 0:
                                        c.getAppointments(e, m.Category);
                                        break;
                                    case 1:
                                        c.getVisitItems(e, m.Category);
                                        break;
                                    case 2:
                                        c.getCostItems(e, m.Category);
                                        break;
                                    case 3:
                                        c.getMedicalItems(e, m.Category, x);
                                        break;
                                    case 4:
                                        c.getDoctorAdvice(e, m.Category);
                                        break;
                                    default:
                                        break
                                }
                            })
                        }
                        $("#new_item").modal("hide");
                        c.alert("新增成功！")
                    } else {
                        c.alert("更新成功！");
                        i.isEdit = false
                    }
                } else {
                    c.alert(GetErrormsg(q.Header.StatusCode))
                }
            }, function (m) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(m)
            })
        } catch (j) {
            console.log(j)
        }
    };
    c.addMainCategoryItem = function (h) {
        var i = g.DealCategoryItemRequest(h.newItem, 1);
        try {
            d.mainCatalogRequest(i, b.operateCode.insert, function (k) {
                if (k.Header.StatusCode == 0) {
                    h.CatalogItems.push({Category: k.Body, SubCategories: []});
                    h.tree.createNode(k.Body.Name, false, "icon-folder-close-alt", null, null, "context1", JSON.stringify(k.Body), 1);
                    $("#new_item").modal("hide");
                    c.alert("新增成功！")
                } else {
                    c.alert(GetErrormsg(k.Header.StatusCode))
                }
            }, function (k) {
                console.log(k)
            })
        } catch (j) {
            console.log(j)
        }
    };
    c.deleteSubCategoryItem = function (i, k) {
        i.State = 1;
        var h = g.DealCategoryItemRequest(i, 2);
        try {
            d.subCatalogRequest(h, b.operateCode.update, function (l) {
                if (l.Header.StatusCode == 0) {
                    for (var n = 0; n < e.CatalogItems.length; n++) {
                        if (h.CategoryID == e.CatalogItems[n].Category.CategoryID) {
                            for (var m = 0; m < e.CatalogItems[n].SubCategories.length; m++) {
                                if (h.SubCategoryID == e.CatalogItems[n].SubCategories[m].SubCategoryID) {
                                    e.CatalogItems[n].SubCategories.splice(m, 1);
                                    e.SubItems = e.CatalogItems[n].SubCategories;
                                    break
                                }
                            }
                        }
                    }
                    k.removeNode();
                    c.alert("删除成功！")
                } else {
                    c.alert(GetErrormsg(l.Header.StatusCode))
                }
            }, function (l) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(l)
            })
        } catch (j) {
            console.log(j)
        }
    };
    c.deleteRecordItem = function (i, k) {
        i.State = 1;
        var h = g.DealCategoryItemRequest(i, 2);
        try {
            d.recordItemsRequest(h, b.operateCode.update, function (l) {
                if (l.Header.StatusCode == 0) {
                    k.removeNode();
                    c.alert("删除成功！")
                } else {
                    c.alert(GetErrormsg(l.Header.StatusCode))
                }
            }, function (l) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(l)
            })
        } catch (j) {
            console.log(j)
        }
    };
    c.deleteMainCategoryItem = function (h, j, l) {
        var i = g.DealCategoryItemRequest(j, 1);
        try {
            d.mainCatalogRequest(i, b.operateCode.update, function (m) {
                if (m.Header.StatusCode == 0) {
                    for (var n = 0; n < h.CatalogItems.length; n++) {
                        if (i.CategoryID == h.CatalogItems[n].Category.CategoryID) {
                            h.CatalogItems.splice(n, 1);
                            break
                        }
                    }
                    l.removeNode();
                    c.alert("删除成功！")
                } else {
                    c.alert(GetErrormsg(m.Header.StatusCode))
                }
            }, function (m) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(m)
            })
        } catch (k) {
            console.log(k)
        }
    };
    c.getMedicalContent = function (h, k) {
        var i = {TenantID: k.TenantID, TemplateID: k.TemplateID};
        try {
            d.medicalTemplateContentRequest(i, b.operateCode.get, function (l) {
                if (l.Header.StatusCode == 0) {
                    if (l.Body != undefined && l.Body != null && l.Body.length > 0) {
                        h.operateType = 2;
                        h.currentMedicalContent = l.Body;
                        g.DealMedicalTemplateContent(h.currentMedicalContent)
                    } else {
                        h.operateType = 1;
                        h.currentMedicalContent = g.DefaultMedicalTemplate(i.TemplateID, i.TenantID)
                    }
                } else {
                    c.alert(GetErrormsg(l.Header.StatusCode))
                }
            }, function (l) {
                c.alert("系统繁忙，请稍候重试！");
                console.log(l)
            })
        } catch (j) {
            console.log(j)
        }
    };
    c.getDoctorAdvice = function (h, j) {
        $("#loading_div").modal("show");
        var i = {
            TenantID: CommonFun.getDataFromSession("CurrentUser").Body.Tenant.TenantID,
            SubCategoryID: j.SubCategoryID
        };
        f(e, 7, i);
        e.currentView.ThirdItemsTitle = "医嘱内容";
        try {
            d.adviceItemsRequest(i, b.operateCode.get, function (l) {
                $("#loading_div").modal("hide");
                e.AdviceContents = {};
                if (l.Header.StatusCode == 0) {
                    e.AdviceItems = l.Body;
                    if (e.AdviceItems == null || e.AdviceItems.length <= 0) {
                        e.isShow = false
                    } else {
                        e.currentAdviceItem = e.AdviceItems[0];
                        e.isShow = true
                    }
                } else {
                    c.alert(GetErrormsg(l.Header.StatusCode));
                    console.log(l)
                }
            }, function (l) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(l)
            })
        } catch (k) {
            console.log(k)
        }
    };
    c.getAdviceContent = function (h, j) {
        var i = {
            TenantID: CommonFun.getDataFromSession("CurrentUser").Body.Tenant.TenantID,
            AdviceItemID: j.AdviceItemID
        };
        try {
            d.adviceContentRequest(i, b.operateCode.get, function (l) {
                if (l.Header.StatusCode == 0) {
                    e.AdviceContents = l.Body
                } else {
                    c.alert(GetErrormsg(l.Header.StatusCode));
                    console.log(l)
                }
            }, function (l) {
                c.alert("系统繁忙，请稍后再试！");
                console.log(l)
            })
        } catch (k) {
            console.log(k)
        }
    };
    c.saveAdviceContent = function (h, j, k) {
        var i = j;
        var m = 0;
        if (k == 1) {
            m = b.operateCode.insert
        } else {
            m = b.operateCode.update
        }
        try {
            d.adviceContentRequest(i, m, function (n) {
                if (n.Header.StatusCode == 0) {
                    if (k == 1) {
                        $("#add_advice_content").modal("hide");
                        $("#add_advice_item").modal("hide");
                        c.getAdviceContent("", i);
                        c.alert("新增成功！")
                    } else {
                        c.getAdviceContent("", i)
                    }
                } else {
                    c.alert(GetErrormsg(n.Header.StatusCode));
                    console.log(n)
                }
            }, function (n) {
                c.alert("系统繁忙，请稍后重试！");
                console.log(n)
            })
        } catch (l) {
            console.log(l)
        }
    };
    c.saveAdviceItem = function (j, k, h) {
        var i = j;
        var m = 0;
        if (k == 1) {
            m = b.operateCode.insert
        } else {
            m = b.operateCode.update
        }
        try {
            d.adviceItemsRequest(i, m, function (n) {
                if (n.Header.StatusCode == 0) {
                    if (k == 1) {
                        $("#add_item").modal("hide");
                        h.AdviceItems.push(n.Body);
                        c.alert("新增成功!")
                    } else {
                        c.alert("更新成功!");
                        j.isEdit = false;
                        c.getDoctorAdvice("", i)
                    }
                } else {
                    c.alert(GetErrormsg(n.Header.StatusCode));
                    console.log(n)
                }
            }, function (n) {
                c.alert("服务器繁忙，请稍后重试！");
                console.log(n)
            })
        } catch (l) {
            console.log(l)
        }
    };
    c.isWithOperatePermission = function (h) {
        var i = b.Auths[h];
        return a.isWithOperatePermission(MenuEnum.SystemSet, i)
    };
    c.initialize = function (h) {
        b.module = MenuEnum.SystemSet
    };
    c.confirm = function (i, j, h) {
        b.MsgBox.Confirm("温馨提示", i, j, h)
    };
    c.alert = function (h) {
        b.MsgBox.Alert("消息", h)
    };
    return c
}]);
systemModule.controller("SetController", ["SetService", "$scope", function (d, b) {
    var c;
    var a = CommonFun.getDataFromSession("CurrentUser").Body.Tenant.TenantID;
    var e = function (f, g) {
        $(f).focus();
        $(f).validationEngine("showPrompt", g, "", "topLeft", true);
        $(f).blur(function () {
            $(f).validationEngine("hideAll")
        })
    };
    b.initialize = function () {
        b.isPro = true;
        b.isSys = false;
        d.initialize(b);
        d.getCatalogItems(b);
        b.currentView = {ItemsTitle: "二级目录设置", ThirdItemsTitle: "病历模版内容", AddTitle: "新增二级目录", ViewType: 2};
        b.tree = "";
        b.operateType = 0
    };
    b.createTree = function (p) {
        var q = [{ID: 0, Name: "预约项目"}, {ID: 1, Name: "回访项目"}, {ID: 2, Name: "收费项目"}, {ID: 3, Name: "病例模板"},
            {
                ID: 4,
                Name: "医嘱项目"
            }
        ];
        var s = {
            context0: {
                elements: [{
                    text: "展开", icon: "icon-star-empty", action: function (i) {
                        i.expandNode()
                    }
                }, {
                    text: "收缩", icon: "icon-star-empty", action: function (i) {
                        i.collapseNode()
                    }
                }, {
                    text: "创建子节点", icon: "icon-star-empty", action: function (j) {
                        var i = $.parseJSON(j.JsonData);
                        b.addCategory(i, j, 1)
                    }
                }]
            }, context1: {
                elements: [{
                    text: "展开", icon: "icon-star-empty", action: function (i) {
                        i.expandNode()
                    }
                }, {
                    text: "收缩", icon: "icon-star-empty", action: function (i) {
                        i.collapseNode()
                    }
                }, {
                    text: "删除", icon: "icon-star-empty", action: function (j) {
                        var i = $.parseJSON(j.JsonData);
                        b.deleteCategory(i, j)
                    }
                }, {
                    text: "创建子节点", icon: "icon-star-empty", action: function (j) {
                        var i = $.parseJSON(j.JsonData);
                        b.addCategory(i, j, 1)
                    }
                }]
            }, context2: {
                elements: [{
                    text: "展开", icon: "icon-star-empty", action: function (i) {
                        i.expandNode()
                    }
                }, {
                    text: "收缩", icon: "icon-star-empty", action: function (i) {
                        i.collapseNode()
                    }
                }, {
                    text: "删除", icon: "icon-star-empty", action: function (j) {
                        var i = $.parseJSON(j.JsonData);
                        b.deleteCategory(i, j)
                    }
                }]
            }, context3: {
                elements: [{
                    text: "展开", icon: "icon-star-empty", action: function (i) {
                        i.expandNode()
                    }
                }, {
                    text: "收缩", icon: "icon-star-empty", action: function (i) {
                        i.collapseNode()
                    }
                }]
            }
        };
        if (p != undefined && p != null) {
            b.tree = createTree("div_tree", "", s);
            for (var n = 0; n < p.length; n++) {
                var u = b.tree.createNode(p[n].Category.Name, false, "icon-folder-close-alt", null, null, (p[n].Category.TenantID ? "context1" : "context0"), JSON.stringify(p[n]), 1, function (j, i) {
                    d.switchView($.parseJSON(j))
                });
                for (var k = 0; k < p[n].SubCategories.length; k++) {
                    var t = u.createChildNode(p[n].SubCategories[k].Name, false, "icon-folder-close-alt", null, p[n].SubCategories[k].TenantID ? "context2" : "context3", JSON.stringify(p[n].SubCategories[k]), 2);
                    for (var h = 0; h < q.length; h++) {
                        var f = {Category: p[n].SubCategories[k], Item: q[h]};
                        var l = JSON.stringify(f);
                        var o = (q[h].ID == 3) ? "icon-folder-close-alt" : "icon-medkit";
                        var g = (q[h].ID == 3) ? "context0" : "";
                        var r = t.createChildNode(q[h].Name, false, o, null, g, l, 3, function (v, m, j) {
                            var i = $.parseJSON(v);
                            switch (i.Item.ID) {
                                case 0:
                                    d.getAppointments(b, i.Category);
                                    break;
                                case 1:
                                    d.getVisitItems(b, i.Category);
                                    break;
                                case 2:
                                    d.getCostItems(b, i.Category);
                                    break;
                                case 3:
                                    d.getMedicalItems(b, i.Category, m, j);
                                    break;
                                case 4:
                                    d.getDoctorAdvice(b, i.Category);
                                    break;
                                default:
                                    break
                            }
                        })
                    }
                }
            }
        }
        b.tree.drawTree()
    };
    b.addCategory = function (g, f) {
        b.OperatorTitle = "新增二级目录";
        b.operateType = 1;
        b.isChild = false;
        b.newItem = {ID: 0, Name: "", State: 0, CreateTime: "", TenantID: a};
        if (g != undefined) {
            b.isChild = true;
            switch (f.CategoryType) {
                case 1:
                    if (g.CategoryID != undefined) {
                        b.newItem.CategoryID = g.CategoryID
                    } else {
                        b.newItem.CategoryID = g.Category.CategoryID
                    }
                    break;
                case 2:
                    break;
                case 3:
                    b.OperatorTitle = "新增病历模版目录";
                    b.newItem.RecordItemID = "";
                    b.newItem.SubCategoryID = g.Category.SubCategoryID;
                    break;
                case 4:
                    break;
                default:
                    break
            }
            c = f;
            b.$apply()
        } else {
            b.isChild = false;
            b.OperatorTitle = "新增主目录";
            c = {CategoryType: 1}
        }
        $("#new_item").modal("show")
    };
    b.saveCategory = function () {
        if (!$.formValidator.pageIsValid("1")) {
            return
        }
        var f = c.CategoryType;
        if (b.isChild) {
            f = f + 1
        }
        switch (f) {
            case 1:
                d.addMainCategoryItem(b);
                break;
            case 2:
                d.saveSubCategoryItem(b.newItem, c);
                break;
            case 3:
                break;
            case 4:
                d.saveMedicalCategory(b, c);
                break;
            default:
                break
        }
    };
    b.deleteCategory = function (g, h) {
        switch (h.CategoryType) {
            case 1:
                var f = "";
                if (g.Category) {
                    f = g.Category
                } else {
                    f = g
                }
                d.confirm("确定要删除" + f.Name + "吗？", function () {
                    f.State = 1;
                    d.deleteMainCategoryItem(b, f, h)
                });
                break;
            case 2:
                d.confirm("确定要删除" + g.Name + "吗？", function () {
                    d.deleteSubCategoryItem(g, h)
                });
                break;
            case 3:
                break;
            case 4:
                if (b.RecordTemplateItems && b.RecordTemplateItems.length > 0) {
                    d.alert("请先删除该节点的病例项目！");
                    return
                }
                d.confirm("确定要删除" + g.Name + "吗？", function () {
                    d.deleteRecordItem(g, h)
                });
                break;
            default:
                break
        }
    };
    b.addItem = function (f) {
        b.ItemPrice = "";
        b.ItemUnit = "";
        b.operateType = 1;
        b.ItemName = "";
        b.newItem = {ID: 0, SubCategoryID: "", Name: "", TenantID: a};
        switch (f) {
            case 1:
                if (!d.isWithOperatePermission("SystemSet_setBookItem")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                b.newItem.SubCategoryID = b.currentView.CategoryInfo.SubCategoryID;
                break;
            case 2:
                if (!d.isWithOperatePermission("SystemSet_setCostItem")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                b.newItem = {
                    Item: {
                        ID: 0,
                        CostItemID: "",
                        SubCategoryID: b.currentView.CategoryInfo.SubCategoryID,
                        Name: "",
                        State: 0,
                        TenantID: a,
                        CreateTime: ""
                    },
                    Price: {
                        ID: 0,
                        CostItemID: "",
                        SubCategoryID: b.currentView.CategoryInfo.SubCategoryID,
                        Unit: "",
                        Price: 0,
                        State: 0,
                        TenantID: a,
                        CreateTime: ""
                    }
                };
                break;
            case 3:
                if (!d.isWithOperatePermission("SystemSet_setVisitItem")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                b.newItem.SubCategoryID = b.currentView.CategoryInfo.SubCategoryID;
                break;
            case 4:
                break;
            case 5:
                if (!d.isWithOperatePermission("SystemSet_editMedical")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                b.newItem.RecordItemID = b.currentView.CategoryInfo.RecordItemID;
                break;
            case 6:
                b.newItem.CategoryID = b.currentView.CategoryInfo.Category.CategoryID;
                break;
            case 7:
                if (!d.isWithOperatePermission("SystemSet_setAdvice")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                b.newItem.SubCategoryID = b.currentView.CategoryInfo.SubCategoryID;
                break;
            default:
                break
        }
        $("#add_item").modal("show")
    };
    b.editItem = function (g, f) {
        if ((!g || !g.TenantID) && f != 2) {
            return
        }
        b.operateType = 2;
        g.newItemName = "";
        switch (f) {
            case 1:
                if (!d.isWithOperatePermission("SystemSet_setBookItem")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                if (g.TenantID == null || g.TenantID == "") {
                    return
                }
                g.newItemName = g.Name;
                g.isEdit = true;
                break;
            case 2:
                if (!d.isWithOperatePermission("SystemSet_setCostItem")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                g.newItemName = g.Item.Name;
                g.newPrice = g.Price.Price;
                g.newUnit = g.Price.Unit;
                g.isEdit = true;
                break;
            case 3:
                if (!d.isWithOperatePermission("SystemSet_setVisitItem")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                if (g.TenantID == null || g.TenantID == "") {
                    return
                }
                g.newItemName = g.Name;
                g.isEdit = true;
                break;
            case 4:
                if (!d.isWithOperatePermission("SystemSet_editMedical")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                g.newItemName = g.Name;
                g.isEdit = true;
                break;
            case 5:
                if (!d.isWithOperatePermission("SystemSet_editMedical")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                g.newItemName = g.Name;
                g.isEdit = true;
                break;
            case 6:
                if (g.TenantID == null || g.TenantID == "") {
                    return
                }
                g.newItemName = g.Name;
                g.isEdit = true;
                break;
            case 7:
                if (!d.isWithOperatePermission("SystemSet_setAdvice")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                if (g.TenantID == null || g.TenantID == "") {
                    return
                }
                g.newItemName = g.Name;
                g.isEdit = true;
                break;
            default:
                break
        }
    };
    b.deleteItem = function (g, f) {
        switch (f) {
            case 1:
                if (!d.isWithOperatePermission("SystemSet_setBookItem")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                d.confirm("确定要删除【" + g.Name + "】吗?", function () {
                    g.State = 1;
                    b.operateType = 2;
                    d.saveAppointItem(g, b.operateType)
                });
                break;
            case 2:
                if (!d.isWithOperatePermission("SystemSet_setCostItem")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                d.confirm("确定要删除【" + g.Item.Name + "】吗?", function () {
                    g.Item.State = 1;
                    g.Price.State = 1;
                    b.operateType = 2;
                    d.saveCostItem(g, b.operateType)
                });
                break;
            case 3:
                if (!d.isWithOperatePermission("SystemSet_setVisitItem")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                d.confirm("确定要删除【" + g.Name + "】吗?", function () {
                    g.State = 1;
                    b.operateType = 2;
                    d.saveVisitItem(g, b.operateType)
                });
                break;
            case 4:
                if (!d.isWithOperatePermission("SystemSet_editMedical")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                g.State = 1;
                break;
            case 5:
                if (!d.isWithOperatePermission("SystemSet_editMedical")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                d.confirm("确定要删除【" + g.Name + "】吗?", function () {
                    g.State = 1;
                    b.operateType = 2;
                    d.saveMedicalTemplate(g, b.operateType)
                });
                break;
            case 6:
                d.confirm("确定要删除【" + g.Name + "】吗?", function () {
                    g.State = 1;
                    b.operateType = 2;
                    d.deleteSubCategoryItem(g, b.operateType)
                });
                break;
            case 7:
                if (!d.isWithOperatePermission("SystemSet_setAdvice")) {
                    d.alert("对不起，您没有权限，请联系管理员！");
                    return
                }
                d.confirm("确定要删除【" + g.Name + "】吗?", function () {
                    g.State = 1;
                    b.operateType = 2;
                    d.saveAdviceItem(g, b.operateType)
                });
                break;
            default:
                break
        }
    };
    b.saveItem = function (g, f, h) {
        b.operateType = h;
        switch (f) {
            case 1:
                if (g == "") {
                    if (!$.formValidator.pageIsValid("3")) {
                        return
                    }
                    g = {SubCategoryID: b.currentView.CategoryInfo.SubCategoryID, Name: b.ItemName, TenantID: a}
                } else {
                    g.Name = g.newItemName
                }
                d.saveAppointItem(g, h);
                break;
            case 2:
                if (g == "") {
                    if (!$.formValidator.pageIsValid("2")) {
                        return
                    }
                    g = {
                        Item: {
                            ID: 0,
                            CostItemID: "",
                            SubCategoryID: b.currentView.CategoryInfo.SubCategoryID,
                            Name: b.ItemName,
                            State: 0,
                            TenantID: a,
                            CreateTime: ""
                        },
                        Price: {
                            ID: 0,
                            CostItemID: "",
                            SubCategoryID: b.currentView.CategoryInfo.SubCategoryID,
                            Unit: b.ItemUnit,
                            Price: b.ItemPrice,
                            State: 0,
                            TenantID: a,
                            CreateTime: ""
                        }
                    }
                } else {
                    g.Item.Name = g.newItemName;
                    g.Price.Price = g.newPrice;
                    g.Price.Unit = g.newUnit;
                    g.Price.TenantID = a
                }
                d.saveCostItem(g, h);
                break;
            case 3:
                if (g == "") {
                    if (!$.formValidator.pageIsValid("3")) {
                        return
                    }
                    g = {SubCategoryID: b.currentView.CategoryInfo.SubCategoryID, Name: b.ItemName, TenantID: a}
                } else {
                    g.Name = g.newItemName
                }
                d.saveVisitItem(g, h);
                break;
            case 4:
                break;
            case 5:
                if (g == "") {
                    if (b.ItemName == "" || b.ItemName == undefined) {
                        d.alert("请填写项目名称！");
                        return
                    }
                    g = {ID: 0, Name: b.ItemName, RecordItemID: b.newItem.RecordItemID, State: 0, TenantID: a}
                } else {
                    g.Name = g.newItemName
                }
                d.saveMedicalTemplate(g, h);
                break;
            case 6:
                if (g == "") {
                    g = {ID: 0, Name: b.ItemName, CategoryID: b.newItem.CategoryID, State: 0, TenantID: a}
                } else {
                    g.Name = g.newItemName
                }
                d.saveSubCategoryItem(g, h);
                break;
            case 7:
                if (g == "") {
                    if (!$.formValidator.pageIsValid("3")) {
                        return
                    }
                    g = {SubCategoryID: b.currentView.CategoryInfo.SubCategoryID, Name: b.ItemName, TenantID: a}
                } else {
                    g.Name = g.newItemName
                }
                d.saveAdviceItem(g, h, b);
                break;
            default:
                break
        }
    };
    b.showTemplateDetail = function (f) {
        b.currentTemplate = f;
        if (!f.TenantID) {
            b.isAbleEdit = false
        } else {
            b.isAbleEdit = true
        }
        d.getMedicalContent(b, f)
    };
    b.showAdviceDetail = function (f) {
        b.currentAdviceItem = f;
        d.getAdviceContent(b, f)
    };
    b.addNewItemContent = function (f) {
        b.newAdviceContent = {
            ID: 0,
            AdviceContentID: "",
            AdviceItemID: f.Self.AdviceItemID,
            Content: "",
            ParentID: f.Self.AdviceContentID,
            State: 0,
            TenantID: a,
            CreateTime: ""
        };
        b.operateType = 1;
        b.adviceContent = "";
        $("#add_advice_content").modal("show")
    };
    b.saveAdviceContent = function () {
        b.newAdviceContent.Content = b.adviceContent;
        if (!$.formValidator.pageIsValid("6")) {
            return
        }
        d.saveAdviceContent(b, b.newAdviceContent, b.operateType)
    };
    b.deleteItemContent = function (g, f) {
        b.operateType = 2;
        b.newAdviceContent = {
            ID: g.Self.ID,
            AdviceContentID: g.Self.AdviceContentID,
            AdviceItemID: g.Self.AdviceItemID,
            Content: g.Self.Content,
            ParentID: g.Self.ParentID,
            State: 1,
            TenantID: a,
            CreateTime: g.Self.CreateTime
        };
        if (f == undefined) {
            d.confirm("确定要删除第【" + g.Self.Content + "】项吗？", function () {
                d.saveAdviceContent(b, b.newAdviceContent, b.operateType)
            })
        } else {
            d.confirm("确定要删除第【" + (f + 1) + "】项吗？", function () {
                d.saveAdviceContent(b, b.newAdviceContent, b.operateType)
            })
        }
    };
    b.editAdviceItem = function (f) {
        b.operateType = 2;
        f.isEdit = true;
        f.adviceContent = f.Self.Content;
        b.newAdviceContent = {
            ID: f.Self.ID,
            AdviceContentID: f.Self.AdviceContentID,
            AdviceItemID: f.Self.AdviceItemID,
            Content: "",
            ParentID: f.Self.ParentID,
            State: 0,
            TenantID: a,
            CreateTime: f.Self.CreateTime
        }
    };
    b.saveAdviceItemContent = function (f, g) {
        b.newAdviceContent.Content = g.adviceContent;
        if (g.adviceContent != "") {
            d.saveAdviceContent(b, b.newAdviceContent, b.operateType)
        } else {
            e($(f.target), "请输入值")
        }
    };
    b.addNewAdviceContentType = function () {
        b.newAdviceContent = {
            ID: 0,
            AdviceContentID: "",
            AdviceItemID: b.currentAdviceItem.AdviceItemID,
            Content: "",
            ParentID: "",
            State: 0,
            TenantID: a,
            CreateTime: ""
        };
        b.operateType = 1;
        b.adviceContent = "";
        $("#add_advice_item").modal("show")
    };
    b.saveMedicalTemplateContent = function () {
        d.saveMedicalTemplateContent(b)
    };
    b.editMedicalContent = function (f) {
        if (!d.isWithOperatePermission("SystemSet_editMedical")) {
            d.alert("对不起，您没有权限，请联系管理员！");
            return
        }
        f.IsReadOnly = false
    };
    b.showPro = function () {
        b.isPro = true;
        b.isSys = false
    };
    b.showSys = function () {
        b.isPro = false;
        b.isSys = true
    };
    b.initialize()
}]);
angular.bootstrap($("#main-content"), ["SetModule"]);