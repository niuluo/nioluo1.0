var LoginMG = {
    validateAccountName: function (a) {
        if (a == "" || a == null) {
            return "请输入账户名"
        } else {
            return true
        }
    }, validatePassword: function (a) {
        if (a == "" || a == null) {
            return "请输入密码"
        } else {
            return true
        }
    }, init: function () {
        $.formValidator.initConfig({validatorGroup: "1", mode: "AlertTip"});
        $($("#content input[name='accountName']")[0]).formValidator({validatorGroup: "1"}).functionValidator({fun: LoginMG.validateAccountName});
        $($("#content input[name='password']")[0]).formValidator({validatorGroup: "1"}).functionValidator({fun: LoginMG.validatePassword})
    }
};
LoginMG.init();
var loginModule = angular.module("LoginModule", ["HttpModule", "ngCookies"]);
loginModule.factory("LoginFactory", [function () {
    return {AccountTypeList: [{Type: 1, Name: "诊所主账户"}, {Type: 2, Name: "普通账户"}]}
}]);
loginModule.service("LoginService", ["$http", "HttpService", "LoginFactory", "$cookies", "ResourceFactory", function (f, d, e, c, a) {
    var b = {};
    b.getAccountTypeResource = function () {
        return e.AccountTypeList
    };
    b.dealLoginData = function (g) {
        if (g != undefined && g != "" && g != null) {
            if (CommonFun.checkFormat(g.UserName, DataTypeEnum.Email)) {
                g.AccountType = 2
            } else {
                if (CommonFun.checkFormat(g.UserName, DataTypeEnum.PhoneMobile)) {
                    g.AccountType = 3
                } else {
                    g.AccountType = 1
                }
            }
        }
        return g
    };
    b.login = function (g, i, h) {
        try {
            d.loginRequest(g, function (l) {
                h.isLoading = false;
                if (l.Header.StatusCode == 0) {
                    if (i == true) {
                        var k = new Date();
                        k.setDate(k.getDate() + 3650);
                        l.Body.Tenant.Password = g.Password;
                        var m = {
                            User: !l.Body.User ? null : {Mobile: g.UserName, Password: g.Password},
                            Tenant: {
                                Mobile: !l.Body.Tenant ? "" : g.UserName,
                                Password: !l.Body.Tenant ? "" : g.Password,
                                TenantName: !l.Body.Tenant ? "" : l.Body.Tenant.TenantName,
                                Logo: !l.Body.Tenant ? "" : l.Body.Tenant.Logo
                            }
                        };
                        c.putObject("tenant", m, {expires: k})
                    } else {
                        c.remove("tenant")
                    }
                    if (l.Body.UserType != 1 && (l.Body.Role == null || l.Body.Role == "")) {
                        b.alert("对不起，您目前没有开通任何权限，请联系管理员绑定权限！")
                    } else {
                        CommonFun.saveDataToSession("CurrentUser", l);
                        var o = 0;
                        if (l.Body.UserType == 1) {
                            window.location.href = "../WebPages/DCPlatformMG.html";
                            return
                        }
                        for (var n = 0; n < l.Body.Auths.length; n++) {
                            if (l.Body.Auths[n].Auth.Auth != 0) {
                                switch (l.Body.Auths[n].Module.ModuleName) {
                                    case"工作平台":
                                        window.location.href = "../WebPages/DCPlatformMG.html";
                                        return;
                                    case"患者管理":
                                        window.location.href = "../WebPages/DCPatientMG.html";
                                        return;
                                    case"预约管理":
                                        window.location.href = "../WebPages/DCBookMG.html";
                                        return;
                                    case"诊所管理":
                                        window.location.href = "../WebPages/DCClinicMG.html";
                                        return;
                                    case"数据统计":
                                        window.location.href = "../WebPages/DCDataStatistics.html";
                                        return;
                                    case"供应平台":
                                        window.location.href = "../WebPages/DCSupplyPlatform.html";
                                        return;
                                    case"系统设置":
                                        window.location.href = "../WebPages/DCSystemSet.html";
                                        return;
                                    case"收银账单":
                                        window.location.href = "../WebPages/QuestionOrders.html";
                                        return;
                                    default:
                                        break
                                }
                            } else {
                                o++
                            }
                        }
                        if (o == l.Body.Auths.length) {
                            b.alert("对不起，您目前没有开通任何权限，请联系管理员绑定权限！");
                            return
                        }
                    }
                } else {
                    if (l == null) {
                        b.alert("登录失败！")
                    }
                    b.alert("用户名不存在或密码错误！")
                }
            }, function (k) {
                h.isLoading = false;
                console.log(k)
            })
        } catch (j) {
            console.log(j)
        }
    };
    b.confirm = function (h, i, g) {
        a.MsgBox.Confirm("温馨提示", h, i, g)
    };
    b.alert = function (g) {
        a.MsgBox.Alert("消息", g)
    };
    return b
}]);
loginModule.controller("LoginController", ["$scope", "LoginService", "$cookies", "ResourceFactory", function (c, b, d, a) {
    c.accountTypeList = b.getAccountTypeResource();
    c.user = {UserName: "", Password: "", AccountType: 2, UserType: 1};
    a.module = 0;
    c.enterLogin = function (g) {
        var f = window.event ? g.keyCode : g.which;
        if (f == 13) {
            c.login()
        }
    };
    c.login = function () {
        if (!$.formValidator.pageIsValid("1")) {
            return
        }
        c.isLoading = true;
        var f = b.dealLoginData(c.user);
        b.login(f, c.rememberAccount, c)
    };
    c.register = function () {
        window.location.href = "../WebPages/Register.html"
    };
    c.resetPassword = function () {
        window.location.href = "../WebPages/ResetPassword.html"
    };
    var e = "../images/logo.png";
    c.initialize = function () {
        c.isLoading = false;
        c.installPackageURL_32 = FileURL + "Package/NioroOralPlatform_32.rar";
        c.installPackageURL_64 = FileURL + "Package/NioroOralPlatform_64.rar";
        var g = "../Images/logo.ico";
        var f = "纽罗口腔";
        $("title").html(f);
        $("#icon_link").prop("href", g);
        var h = d.getObject("tenant");
        c.loginBol = true;
        if (h == null) {
            c.Title = "欢迎登录口腔系统";
            c.Logo = e;
            c.rememberAccount = false
        } else {
            c.Title = h.Tenant.TenantName;
            c.Logo = h.Tenant.Logo == null ? e : FileURL + "Image/" + h.Tenant.Logo;
            c.rememberAccount = true;
            if (h.User != null) {
                c.user.UserName = h.User.Mobile;
                c.user.Password = h.User.Password;
                c.user.UserType = 2
            } else {
                c.user.UserName = h.Tenant.Mobile;
                c.user.Password = h.Tenant.Password;
                c.user.UserType = 1
            }
        }
        $(".login-col").on("click", function () {
            $(".con").toggle("slow")
        });
        if (window.screen.width < 1366 && window.screen.height <= 768) {
            b.alert("您的分辨率小于软件最低配置要求，在软件运行时可能出现未知错误，敬请见谅")
        }
    };
    c.initialize()
}]);
angular.bootstrap($("#headerBtn"), ["LoginModule"]);
loginModule.controller("loginIndexController", ["$scope", "LoginService", "$cookies", "$interval", function (c, b, d, e) {
    var a = $("#productImg img").css("display", "none");
    c.currentIndex = 1;
    $("#a").css("display", "inline-block");
    c.displayImg = function (g) {
        var f = {
            workSpace: "诊所工作人员处理日常工作的主要位置，对应不同的用户角色会有不同的操作侧重点，前台工作人员在此处理当日预约和需要回访的患者。医生在此可以看到预约到自己名下的患者，并辅助诊疗过程的记录。",
            ManagePatient: "患者统一的管理中心，主要用于查看、编辑患者信息和病历档案。医生可以通过患者类别、联系方式来搜索患者，对患者信息进行对应的管理；",
            appointManage: "当天预约的患者，将自动列在主窗口中。通过不同的颜色模块来区分当日的预约到访情况，此外，我们还备有预约提醒，预约推迟，患者流失等。",
            clinicManage: "诊所员工的基本信息，以及员工对应的角色管理，不同的角色可以赋予不同的权限。",
            dataStatistics: "通过树状图和饼状图来进行诊所的数据统计，主要是患者来源，患者增长量和医生工作量。",
            supplySpace: "主要展示了本公司提供各种产品种类，以及各类产品的价格，方便用户查询了解。",
            systemSet: "系统基本内容设置， 在此对自定义诊所的病例模板，医嘱模板，预约事项和收费项进行集中管理。"
        };
        switch (g) {
            case 1:
                $("#productImg img").css("display", "none");
                $("#a").css("display", "inline-block");
                $("#TxtIntroduce").html(f.workSpace);
                $("#loginManageBtn>button").css("background", "linear-gradient(#F3F3F4,#838382)");
                $("#loginManageBtn>button:eq(0)").css("background", "linear-gradient(#75E3FE,#3F48FC)");
                break;
            case 2:
                $("#productImg img").css("display", "none");
                $("#b").css("display", "inline-block");
                $("#TxtIntroduce").html(f.ManagePatient);
                $("#loginManageBtn>button").css("background", "linear-gradient(#F3F3F4,#838382)");
                $("#loginManageBtn>button:eq(1)").css("background", "linear-gradient(#75E3FE,#3F48FC)");
                break;
            case 3:
                $("#productImg img").css("display", "none");
                $("#c").css("display", "inline-block");
                $("#TxtIntroduce").html(f.appointManage);
                $("#loginManageBtn>button").css("background", "linear-gradient(#F3F3F4,#838382)");
                $("#loginManageBtn>button:eq(2)").css("background", "linear-gradient(#75E3FE,#3F48FC)");
                break;
            case 4:
                $("#productImg img").css("display", "none");
                $("#d").css("display", "inline-block");
                $("#TxtIntroduce").html(f.clinicManage);
                $("#loginManageBtn>button").css("background", "linear-gradient(#F3F3F4,#838382)");
                $("#loginManageBtn>button:eq(3)").css("background", "linear-gradient(#75E3FE,#3F48FC)");
                break;
            case 5:
                $("#productImg img").css("display", "none");
                $("#e").css("display", "inline-block");
                $("#TxtIntroduce").html(f.dataStatistics);
                $("#loginManageBtn>button").css("background", "linear-gradient(#F3F3F4,#838382)");
                $("#loginManageBtn>button:eq(4)").css("background", "linear-gradient(#75E3FE,#3F48FC)");
                break;
            case 6:
                $("#productImg img").css("display", "none");
                $("#f").css("display", "inline-block");
                $("#TxtIntroduce").html(f.supplySpace);
                $("#loginManageBtn>button").css("background", "linear-gradient(#F3F3F4,#838382)");
                $("#loginManageBtn>button:eq(5)").css("background", "linear-gradient(#75E3FE,#3F48FC)");
                break;
            case 7:
                $("#productImg img").css("display", "none");
                $("#g").css("display", "inline-block");
                $("#TxtIntroduce").html(f.systemSet);
                $("#loginManageBtn>button").css("background", "linear-gradient(#F3F3F4,#838382)");
                $("#loginManageBtn>button:eq(6)").css("background", "linear-gradient(#75E3FE,#3F48FC)");
                break;
            default:
                break
        }
    };
    c.setTimeFunc = function () {
        if (c.currentIndex == 7) {
            c.displayImg(7);
            c.currentIndex = 1
        } else {
            c.displayImg(c.currentIndex);
            c.currentIndex = c.currentIndex + 1
        }
    };
    e(c.setTimeFunc, 2000);
    $.ready($("#loginManageBtn>button:first-child").css("background", "linear-gradient(#75E3FE,#3F48FC)"))
}]);
angular.bootstrap($("#loginSection"), ["LoginModule"]);