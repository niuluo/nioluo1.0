var QuestionOrdersMG = {
    init: function () {
        $("#loading_div").modal("show");
        MenuActive.setActive(MenuEnum.QuestionOrders);

        //绑定日期控件
        CommonFun.bindingDateControl("startTime", new Date(), "", false);
        CommonFun.bindingDateControl("endTime", new Date(), "", false);
        CommonFun.bindingDateControl("startTime2", new Date(), "", false);
        CommonFun.bindingDateControl("endTime2", new Date(), "", false);
    }
};
QuestionOrdersMG.init();
var questionOrdersModule = angular.module("QuestionOrdersModule", ["HttpModule", "PaginationModule", "PermissionModule"]);
questionOrdersModule.service("AccountService", ["$http", "HttpService", "ResourceFactory", "PermissionFactory", function ($http, httpHandlerService, resourceFactory, a) {
    var service = {};

    // 初始化获取列表
    service.getCheckList = function (data, $scope) {
        httpHandlerService.CashierBillRequest(data, resourceFactory.operateCode.get,
            function (response) {
                if (response.Header.StatusCode == 0) {
                    $scope.setTotalItems(response.Body.Count);
                    $scope.getPagination();
                    $scope.PayCheckList = [];
                    $scope.TotalPayCheckList = response.Body.OrderList == null ? [] : response.Body.OrderList;
                    $scope.changePaginationContent($scope.TotalPayCheckList, $scope.PayCheckList);

                    if (!$scope.TotalPayCheckList.length > 0) {
                        service.alert("尚未有数据");
                    }
                } else {
                    $scope.PayCheckList = [];
                    service.alert(GetErrormsg(response.Header.StatusCode));
                }

                $(".body_hide").css("opacity", "1");
                $("#loading_div").modal("hide");
            },
            function (response) {
                service.alert("数据获取失败，请稍后重试");
                $("#loading_div").modal("hide");
                console.log(response);
            }
        );
    };

    // 分页获取列表
    service.getCheckListByPage = function (data, $scope) {
        httpHandlerService.CashierBillRequest(data, resourceFactory.operateCode.get,
            function (response) {
                if (response.Header.StatusCode == 0) {
                    $scope.PayCheckList = response.Body.OrderList == null ? [] : response.Body.OrderList;
                } else {
                    $scope.PayCheckList = [];
                }
            },
            function (response) {
                service.alert("数据获取失败，请稍后重试");
                console.log(response);
            }
        );
    };

    // 初始化获取总额
    service.GetStatementGroupRequest = function ($scope) {
        var data = {
            from: $scope.searchPar.StartTimeText,
            to: $scope.searchPar.EndTimeText + " 23:59:59",
            TenantID: $scope.currentUser.Body.Tenant.TenantID
        };
        httpHandlerService.GetStatementGroupRequest(data, resourceFactory.operateCode.get,
            function (response) {
                if (response.Header.StatusCode == 0) {
                    var list = [];
                    if (response.Body.OrderList) {
                        for (var m = 0; m < response.Body.OrderList.length; m++) {
                            for (var j = 0; j < response.Body.OrderList[m].length; j++) {
                                if (j == 0) {
                                    list.push(JSON.parse(JSON.stringify(response.Body.OrderList[m][j])));
                                    list[m].totalPayAmount = 0;
                                    list[m].totalRefundAmount = 0;
                                }

                                if (parseFloat(response.Body.OrderList[m][j].PayAmount)) {
                                    list[m].totalPayAmount += response.Body.OrderList[m][j].PayAmount;
                                }

                                if (parseFloat(response.Body.OrderList[m][j].RefundAmount)) {
                                    list[m].totalRefundAmount += response.Body.OrderList[m][j].RefundAmount;
                                }
                            }
                        }
                    }

                    $scope.totalList = list.length > 0 ? list[0] : {totalPayAmount: 0, totalRefundAmount: 0};
                } else {
                }
            },
            function (response) {
            }
        );
    };

    // 退费
    service.ReturnPayErrorOrder = function (data, $scope) {
        var data2 = {
            BillNo: data.BillNo,
            RefundAmount: data.toBeRefund
        };

        httpHandlerService.RefundAmountRequest(data2, resourceFactory.operateCode.update,
            function (response) {
                if (response.Header.StatusCode == 0) {
                    service.alert("退费成功");
                    service.getCheckListByPage($scope.searchPar, $scope);
                    service.GetStatementGroupRequest($scope);
                    $("#refundReasonAccount").modal("hide");
                } else {
                    service.alert(response.Header.Message + " : 请联系平台进行反馈，谢谢！");
                }
            },
            function (response) {
                service.alert("数据通讯失败，请稍后重试");
                console.log(response);
            }
        );
    };

    service.isWithOperatePermission = function (g) {
        var h = resourceFactory.Auths[g];
        return a.isWithOperatePermission(MenuEnum.QuestionOrders, h)
    };

    service.confirm = function (g, h, f) {
        resourceFactory.MsgBox.Confirm("温馨提示", g, h, f)
    };
    service.alert = function (f) {
        resourceFactory.MsgBox.Alert("消息", f)
    };
    return service;
}]);
questionOrdersModule.service("QuestionService", ["$http", "HttpService", "ResourceFactory", "PermissionFactory", function ($http, httpHandlerService, resourceFactory, a) {
    var service = {};

    // 初始化获取列表
    service.getCheckList = function (data, $scope) {
        httpHandlerService.IssueBillRequest(data, resourceFactory.operateCode.get,
            function (response) {
                if (response.Header.StatusCode == 0) {
                    $scope.setTotalItems(response.Body.Count);
                    $scope.getPagination();
                    $scope.PayCheckList = [];
                    $scope.TotalPayCheckList = response.Body.OrderList == null ? [] : response.Body.OrderList;
                    $scope.changePaginationContent($scope.TotalPayCheckList, $scope.PayCheckList);

                    if (!$scope.TotalPayCheckList.length > 0) {
                        service.alert("尚未有数据");
                    }
                } else {
                    $scope.PayCheckList = [];
                    service.alert(GetErrormsg(response.Header.StatusCode));
                }

                $(".body_hide").css("opacity", "1");
                $("#loading_div").modal("hide");
            },
            function (response) {
                service.alert("数据获取失败，请稍后重试");
                $("#loading_div").modal("hide");
                console.log(response);
            }
        );
    };

    // 分页获取列表
    service.getCheckListByPage = function (data, $scope) {
        httpHandlerService.IssueBillRequest(data, resourceFactory.operateCode.get,
            function (response) {
                if (response.Header.StatusCode == 0) {
                    $scope.PayCheckList = response.Body.OrderList == null ? [] : response.Body.OrderList;
                } else {
                    $scope.PayCheckList = [];
                }
            },
            function (response) {
                service.alert("数据获取失败，请稍后重试");
                console.log(response);
            }
        );
    };

    // 退费
    service.ReturnPayErrorOrder = function (data, $scope) {
        var data2 = {
            BillNo: data.BillNo,
            RefundAmount: data.toBeRefund
        };

        httpHandlerService.RefundAmountRequest(data2, resourceFactory.operateCode.update,
            function (response) {
                if (response.Header.StatusCode == 0) {
                    service.alert("退费成功");
                    service.getCheckListByPage($scope.searchPar, $scope);
                    $("#refundReason").modal("hide");
                } else {
                    service.alert(response.Header.Message + " : 请联系平台进行反馈，谢谢！");
                }
            },
            function (response) {
                service.alert("数据通讯失败，请稍后重试");
                console.log(response);
            }
        );
    };

    service.isWithOperatePermission = function (g) {
        var h = resourceFactory.Auths[g];
        return a.isWithOperatePermission(MenuEnum.QuestionOrders, h)
    };
    service.confirm = function (g, h, f) {
        resourceFactory.MsgBox.Confirm("温馨提示", g, h, f)
    };
    service.alert = function (f) {
        resourceFactory.MsgBox.Alert("消息", f)
    };
    return service;
}]);
questionOrdersModule.controller("QuestionOrdersController", ["$scope", function ($scope) {
    // 初始化
    $scope.initialize = function () {
        var today = new Date();
        var beginDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 6, 0, 0, 0);
        var endDate = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 23, 59, 59);
        $scope.searchPar_Account = {
            Index: 1,
            Count: 10,
            from: beginDate.Format("yyyy-MM-dd hh:mm:ss"),
            StartTimeText: beginDate.Format("yyyy-MM-dd"),
            to: endDate.Format("yyyy-MM-dd hh:mm:ss"),
            EndTimeText: endDate.Format("yyyy-MM-dd"),
            OrderIDs: "",
            TenantID: ""
        };

        $scope.searchPar_Question = {
            Index: 1,
            Count: 10,
            from: beginDate.Format("yyyy-MM-dd hh:mm:ss"),
            StartTimeText: beginDate.Format("yyyy-MM-dd"),
            to: endDate.Format("yyyy-MM-dd hh:mm:ss"),
            EndTimeText: endDate.Format("yyyy-MM-dd"),
            OrderIDs: "",
            TenantID: ""
        };

        setTimeout(function () {
            $scope.accountShow();
        }, 1000);
    };

    $scope.accountShow = function () {
        $scope.isAccount = true;
        $scope.$broadcast('to-account', JSON.stringify($scope.searchPar_Account));
    };

    $scope.customSearchOfAccount = function () {
        $scope.$broadcast('to-account_search', JSON.stringify($scope.searchPar_Account));
    };

    $scope.questionShow = function () {
        $scope.isAccount = false;
        $scope.$broadcast('to-question', JSON.stringify($scope.searchPar_Question));
    };

    $scope.customSearchOfQuestion = function () {
        $scope.$broadcast('to-question_search', JSON.stringify($scope.searchPar_Question));
    };

    $scope.showInputModal = function (type) {
        if (type == 1) {
            $("#noModal_account").modal("show");
        } else if (type == 2) {
            $("#noModal_question").modal("show");
        }
    };

    // 类型
    $scope.TypeList = [{
        Value: 1,
        Text: "未处理"
    }, {
        Value: 2,
        Text: "已处理"
    }];

    $scope.initialize();
}]);
questionOrdersModule.controller("AccountController", ["$scope", "AccountService", "paginationService", "ResourceFactory", function ($scope, AccountService, paginationService, resourceFactory) {
    $scope.$on('to-account', function (d, data) {
        if (!$scope.searchPar) {
            $scope.searchPar = JSON.parse(data);
        } else {
            var temp = JSON.parse(data);
            $scope.searchPar.StartTimeText = temp.StartTimeText;
            $scope.searchPar.EndTimeText = temp.EndTimeText;
            $scope.searchPar.OrderIDs = temp.OrderIDs;
        }

        if (!$scope.initialized) {
            $scope.initialize();
        }
    });

    $scope.$on('to-account_search', function (d, data) {
        if (!$scope.searchPar) {
            $scope.searchPar = JSON.parse(data);
        } else {
            var temp = JSON.parse(data);
            $scope.searchPar.StartTimeText = temp.StartTimeText;
            $scope.searchPar.EndTimeText = temp.EndTimeText;
            $scope.searchPar.OrderIDs = temp.OrderIDs;
        }

        $scope.customSearch();
    });

    // 初始化
    $scope.initialize = function () {
        $scope.initialized = true;
        $scope.currentUser = CommonFun.getDataFromSession("CurrentUser");
        resourceFactory.module = MenuEnum.QuestionOrders;

        // 分页初始化
        paginationService.initialize($scope, 10);
        $scope.search();
    };

    /*搜索事件*/
    $scope.search = function () {
        $scope.searchPar.from = $scope.searchPar.StartTimeText;
        $scope.searchPar.to = $scope.searchPar.EndTimeText + " 23:59:59";
        AccountService.getCheckList($scope.searchPar, $scope);
        AccountService.GetStatementGroupRequest($scope);
    };

    /*自定义查询事件*/
    $scope.customSearch = function ($event) {
        if (!$scope.searchPar.EndTimeText || !$scope.searchPar.StartTimeText) {
            AccountService.alert("开始时间和结束时间必须输入");
            return;
        }

        $("#loading_div").modal("show");
        $scope.conf.currentPage = 1;
        $scope.currentPageNum = 1;
        $scope.searchPar.Index = 1;
        $scope.search();
    };

    // 分页相关
    $scope.$watch('conf.currentPage', function () {
        if ($scope.conf && $scope.conf.changePage && $scope.conf.currentPage) {
            $scope.PayCheckList = [];
            if ($scope.conf.currentPage) {
                $scope.searchPar.Index = $scope.conf.currentPage;
                AccountService.getCheckListByPage($scope.searchPar, $scope);
            }
        }
    });

    $scope.StatusText = function (status) {
        if (status == 0 || status == 1) {
            return "待支付";
        } else if (status == 4) {
            return "已支付";
        } else if (status == 2) {
            return "欠费";
        } else if (status == 3) {
            return "已完成";
        } else if (status == 5) {
            return "申退中";
        } else {
            return "未知";
        }
    };

    $scope.showItemNames = function (name) {
        if (!name) {
            return "无";
        }

        return name;
    }

    // 退费
    $scope.showRefundReason = function (item) {
        if (!AccountService.isWithOperatePermission("Account_refund")) {
            AccountService.alert("对不起，您没有权限，请联系管理员！");
            return
        }

        //AccountService.confirm("确定退费该订单吗", function () {
        //    $scope.confirmItem = JSON.parse(JSON.stringify(item));
        //    $scope.confirmItem.RefundReason = "";
        //    $scope.$apply();
        //    $("#refundReasonAccount").modal("show");
        //}, function () {
        //});

        $scope.confirmItem = JSON.parse(JSON.stringify(item));
        $scope.confirmItem.RefundReason = "";
        $("#refundReasonAccount").modal("show");
    };

    $scope.confirmRefund = function () {
        if (!$scope.confirmItem.toBeRefund) {
            AccountService.alert("请输入退费金额");
            return;
        }

        var toBeRefund = parseFloat($scope.confirmItem.toBeRefund);
        if (!toBeRefund) {
            AccountService.alert("退费金额不正确");
            return;
        }

        if (!$scope.confirmItem.RealCharge) {
            $scope.confirmItem.RealCharge = 0;
        }

        if ($scope.confirmItem.RealCharge - toBeRefund < 0) {
            AccountService.alert("退费金额不能大于订单金额");
            return;
        }

        AccountService.confirm("退款后费用将无法收回，确定退费该订单吗？", function () {
            //$("#loading_div").modal("show");
            AccountService.alert("退款中，系统正在操作，请耐心等上1-3分钟，谢谢！");
            var data = $scope.confirmItem;
            AccountService.ReturnPayErrorOrder(data, $scope);
        }, function () {
        });
    };
}]);
questionOrdersModule.controller("QuestionController", ["$scope", "QuestionService", "paginationService", "ResourceFactory", function ($scope, QuestionService, paginationService, resourceFactory) {
    $scope.$on('to-question', function (d, data) {
        if (!$scope.searchPar) {
            $scope.searchPar = JSON.parse(data);
        } else {
            var temp = JSON.parse(data);
            $scope.searchPar.StartTimeText = temp.StartTimeText;
            $scope.searchPar.EndTimeText = temp.EndTimeText;
            $scope.searchPar.OrderIDs = temp.OrderIDs;
        }

        if (!$scope.initialized) {
            $("#loading_div").modal("show");
            $scope.initialize();
        }
    });

    $scope.$on('to-question_search', function (d, data) {
        if (!$scope.searchPar) {
            $scope.searchPar = JSON.parse(data);
        } else {
            var temp = JSON.parse(data);
            $scope.searchPar.StartTimeText = temp.StartTimeText;
            $scope.searchPar.EndTimeText = temp.EndTimeText;
            $scope.searchPar.OrderIDs = temp.OrderIDs;
        }

        $scope.customSearch();
    });

    // 初始化
    $scope.initialize = function () {
        $scope.initialized = true;

        // 分页初始化
        paginationService.initialize($scope, 10);
        $scope.search();
    };

    /*搜索事件*/
    $scope.search = function () {
        $scope.searchPar.from = $scope.searchPar.StartTimeText;
        $scope.searchPar.to = $scope.searchPar.EndTimeText + " 23:59:59";
        QuestionService.getCheckList($scope.searchPar, $scope);
    };

    /*自定义查询事件*/
    $scope.customSearch = function ($event) {
        if (!$scope.searchPar.EndTimeText || !$scope.searchPar.StartTimeText) {
            QuestionService.alert("开始时间和结束时间必须输入");
            return;
        }

        $("#loading_div").modal("show");
        $scope.conf.currentPage = 1;
        $scope.currentPageNum = 1;
        $scope.searchPar.Index = 1;
        $scope.search();
    };

    // 分页相关
    $scope.$watch('conf.currentPage', function () {
        if ($scope.conf && $scope.conf.changePage && $scope.conf.currentPage) {
            $scope.PayCheckList = [];
            if ($scope.conf.currentPage) {
                $scope.searchPar.Index = $scope.conf.currentPage;
                QuestionService.getCheckListByPage($scope.searchPar, $scope);
            }
        }
    });

    $scope.StatusText = function (status) {
        if (status == 0 || status == 1) {
            return "待支付";
        } else if (status == 4) {
            return "已支付";
        } else if (status == 2) {
            return "欠费";
        } else if (status == 3) {
            return "已完成";
        } else if (status == 5) {
            return "申退中";
        } else {
            return "未知";
        }
    };

    $scope.showItemNames = function (name) {
        if (!name) {
            return "无";
        }

        return name;
    }

    // 退费
    $scope.showRefundReason = function (item) {
        if (!QuestionService.isWithOperatePermission("Account_refund")) {
            QuestionService.alert("对不起，您没有权限，请联系管理员！");
            return
        }

        //QuestionService.confirm("确定退费该订单吗", function () {
        //    $scope.confirmItem = JSON.parse(JSON.stringify(item));
        //    $scope.confirmItem.RefundReason = "";
        //    $scope.$apply();
        //    $("#refundReason").modal("show");
        //}, function () {
        //});

        $scope.confirmItem = JSON.parse(JSON.stringify(item));
        $scope.confirmItem.RefundReason = "";
        $("#refundReason").modal("show");
    };

    $scope.confirmRefund = function () {
        if (!$scope.confirmItem.toBeRefund) {
            QuestionService.alert("请输入退费金额");
            return;
        }

        var toBeRefund = parseFloat($scope.confirmItem.toBeRefund);
        if (!toBeRefund) {
            QuestionService.alert("退费金额不正确");
            return;
        }

        if (!$scope.confirmItem.RealCharge) {
            $scope.confirmItem.RealCharge = 0;
        }

        if ($scope.confirmItem.RealCharge - toBeRefund < 0) {
            QuestionService.alert("退费金额不能大于订单金额");
            return;
        }

        QuestionService.confirm("退款后费用将无法收回，确定退费该订单吗？", function () {
            //$("#loading_div").modal("show");
            QuestionService.alert("退款中，系统正在操作，请耐心等上1-3分钟，谢谢！");
            var data = $scope.confirmItem;
            QuestionService.ReturnPayErrorOrder(data, $scope);
        }, function () {
        });
    };
}]);
angular.bootstrap($("#main-content"), ["QuestionOrdersModule"]);