//var ManagementBaseURL = "https://www.niuluo-tech.cn/api/";
var ManagementBaseURL = "https://www.niuluo-tech.cn/api/";
var ManagementServerList = [{ActionName: "WeAppoints", Url: "PatientWeChat/AppointDeal"}, {
    ActionName: "WeTreats",
    Url: "PatientWeChat/TreatDeal"
}, {ActionName: "WeTreatDetail", Url: "PatientWeChat/GetTreatDetail"}, {
    ActionName: "WeVisit",
    Url: "PatientWeChat/VisitDeal"
}, {ActionName: "WePatient", Url: "PatientWeChat/PatientDeal"}, {
    ActionName: "WeAppointInfo",
    Url: "PatientWeChat/GetInformationsForAppoint"
}, {ActionName: "WeAdviceDetail", Url: "PatientWeChat/GetAdviceByTreat"},
    {ActionName: "WeGetBillsByPatient", Url: "PatientWeChat/GetBillsByPatient"},
    {ActionName: "WePayment", Url: "PatientWeChat/Payment"},
    {ActionName: "WeApplyRefund", Url: "PatientWeChat/ApplyRefund"}];
var ManagementWebServer = {
    getUrl: function (b) {
        var a = "";
        if (ManagementServerList != undefined && ManagementServerList.length > 0) {
            for (var c = 0; c < ManagementServerList.length; c++) {
                if (ManagementServerList[c].ActionName == b) {
                    a = ManagementBaseURL + ManagementServerList[c].Url;
                    return a
                }
            }
        }
        return a
    }
};
var sessionStorage = window.sessionStorage;
var httpModule = angular.module("HttpModule", []);
httpModule.factory("ResourceFactory", [function () {
    var a = {};
    a.operateCode = {nothing: 0, get: 1, update: 2, insert: 3};
    a.statusCode = {
        Success: 0,
        NoLogin: 1,
        NoPermit: 2,
        NoData: 3,
        Exist: 4,
        ProgramError: 5,
        CatchError: 6,
        ParamError: 7
    };
    a.deleteDataFromSession = function (b) {
        var c = sessionStorage.getItem(b);
        if (b != null) {
            sessionStorage.removeItem(b)
        }
    };
    a.requestBody = function (b, e, d, c) {
        return {Header: {Token: b, StatusCode: 0, Message: "", OperateCode: e, TimeStamp: c}, Body: d}
    };
    a.getErrorMsg = function (b) {
        switch (b) {
            case 7:
                return "参数错误";
            case 8:
                return "内部调用错误";
            case 10:
                return "操作符错误";
            case 17:
                return "未绑定";
            default:
                return "服务器繁忙，请稍后再试！"
        }
    };
    a.saveDataToSession = function (b, d) {
        var c = sessionStorage.getItem(b);
        if (c != null) {
            sessionStorage.removeItem(c)
        }
        if (d != null && d != "" && d != undefined) {
            sessionStorage.setItem(b, JSON.stringify(d))
        }
    };
    a.getDataFromSession = function (b) {
        var c = sessionStorage.getItem(b);
        if (c != null) {
            c = JSON.parse(c)
        }
        return c
    };
    a.bindingDateTimeControl = function (f, c, d) {
        var b = "2999-01-01";
        var e = "1900-01-01";
        if (d != undefined && d != "") {
            b = d
        }
        if (c != undefined && c != "") {
            e = c
        }
        $("#" + f).datetimepicker({
            format: "yyyy-mm-dd",
            language: "fr",
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            forceParse: 0,
            weekStart: 1,
            startDate: e,
            endDate: b
        })
    };
    a.checkFormat = function (e, d, b) {
        if (d == DataTypeEnum.Length) {
            return e.length <= b
        }
        return e.length() <= b;
        if (e == undefined || e == "" || e == null) {
            return false
        }
        switch (d) {
            case DataTypeEnum.Required:
                return true;
            case DataTypeEnum.Contract:
                var c = /^(\d{3,4}-)?\d{6,8}$/;
                return c.test(e);
            case DataTypeEnum.Email:
                var c = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
                return c.test(e);
            case DataTypeEnum.Identify:
                var c = new RegExp("(^\d{18}$)|(^\d{15}$)");
                return c.test(e);
            case DataTypeEnum.Number:
                var c = /^[0-9]*[1-9][0-9]*$/;
                return c.test(e);
            case DataTypeEnum.PhoneMobile:
                var c = /^1(3|4|5|7|8)\d{9}$/;
                return c.test(e);
            case DataTypeEnum.PostCode:
                var c = /^\d{6}$/;
                return c.test(e);
            case DataTypeEnum.DateFormat:
                var c = /^\d{4}(\-|\/|\.)\d{1,2}\1\d{1,2}$/;
                return c.test(e);
            case DataTypeEnum.Fee:
                var c = /^([1-9][\d]{0,7}|0)(\.[\d]{1,2})?$/;
                return c.test(e);
            default:
                return false;
                break
        }
    };
    a.validateDate = function (c, b) {
        if (!a.checkFormat(c, DataTypeEnum.DateFormat)) {
            return "日期无效，请重新输入"
        } else {
            return true
        }
    };
    a.validateNumber = function (c, b) {
        if (!a.checkFormat(c, DataTypeEnum.Number)) {
            return "数字无效，请重新输入"
        } else {
            return true
        }
    };
    return a
}]);
httpModule.config(["$httpProvider", function (a) {
    a.defaults.headers.post["Content-Type"] = "application/x-www-form-urlencoded;charset=utf-8"
}]);
httpModule.factory("HttpBaseFactory", ["$location", "$http", "ResourceFactory", function (f, e, a) {
    var d = (new Date()).valueOf();
    var c = {};
    c.getDomain = function () {
        var g = f.protocol() + "://" + f.host() + ":" + f.port();
        return g
    };
    var b = function () {
        var g = a.getDataFromSession("CurrentUser");
        if (g != null) {
            return g.Header.Token
        } else {
            if (f.absUrl().lastIndexOf("Login.html") > 0 || f.absUrl().lastIndexOf("Register.html") > 0) {
                return ""
            }
        }
    };
    c.baseRequest = function (h, m, l, g, i) {
        var j = function () {
            a.deleteDataFromSession("CurrentUser");
            console.log("removeSession")
        };
        var k = a.requestBody("", m, l, d);
        e.post(h, k).success(function (n) {
            if (n.Header.TimeStamp != d) {
                return
            }
            if (typeof(g) == "function") {
                g(n)
            } else {
                console.log("此处应是函数");
                throw ("successCallback")
            }
        }).error(function (n) {
            if (typeof(i) == "function") {
                i(n)
            } else {
                console.log("此处应该是函数");
                throw ("errorCallback")
            }
        })
    };
    return c
}]);
httpModule.factory("ManagementHttpRequestFactory", ["HttpBaseFactory", function (b) {
    var a = {};
    a.weAppointRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("WeAppoints"), f, e, c, d)
    };
    a.weTreatsRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("WeTreats"), f, e, c, d)
    };
    a.weTreatDetailRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("WeTreatDetail"), f, e, c, d)
    };
    a.weVisitRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("WeVisit"), f, e, c, d)
    };
    a.wePatientRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("WePatient"), f, e, c, d)
    };
    a.weAppointInfoRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("WeAppointInfo"), f, e, c, d)
    };
    a.weAdviceDetailRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("WeAdviceDetail"), f, e, c, d)
    };
    a.WeGetBillsByPatientRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("WeGetBillsByPatient"), f, e, c, d)
    };
    a.WePaymentRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("WePayment"), f, e, c, d)
    };
    a.WeApplyRefundRequest = function (e, f, c, d) {
        b.baseRequest(ManagementWebServer.getUrl("WeApplyRefund"), f, e, c, d)
    };
    return a
}]);
httpModule.service("ManagementHttpService", ["ManagementHttpRequestFactory", function (a) {
    var b = {};
    b.weAppointRequest = function (e, f, c, d) {
        a.weAppointRequest(e, f, c, d)
    };
    b.weTreatsRequest = function (e, f, c, d) {
        a.weTreatsRequest(e, f, c, d)
    };
    b.weTreatDetailRequest = function (e, f, c, d) {
        a.weTreatDetailRequest(e, f, c, d)
    };
    b.weVisitRequest = function (e, f, c, d) {
        a.weVisitRequest(e, f, c, d)
    };
    b.wePatientRequest = function (e, f, c, d) {
        a.wePatientRequest(e, f, c, d)
    };
    b.weAppointInfoRequest = function (e, f, c, d) {
        a.weAppointInfoRequest(e, f, c, d)
    };
    b.weAdviceDetailRequest = function (e, f, c, d) {
        a.weAdviceDetailRequest(e, f, c, d)
    };
    b.WeGetBillsByPatientRequest = function (e, f, c, d) {
        a.WeGetBillsByPatientRequest(e, f, c, d)
    };
    b.WePaymentRequest = function (e, f, c, d) {
        a.WePaymentRequest(e, f, c, d)
    };
    b.WeApplyRefundRequest = function (e, f, c, d) {
        a.WeApplyRefundRequest(e, f, c, d)
    };
    return b
}]);
var resourceModule = angular.module("ResourceModule", []);
resourceModule.service("ResourceService", ["$location", function (b) {
    var a = {};
    a.bindingDateControl = function (h, d, f, g) {
        var c = new Date(1990, 1, 1);
        var e = new Date(2999, 1, 1);
        if (f != undefined) {
            c = f
        }
        if (g != undefined) {
            e = g
        }
        if (!d) {
            $("#" + h).mobiscroll().date({
                theme: "android-ics light",
                lang: "zh",
                animate: "fade",
                cancelText: null,
                maxDate: e,
                minDate: c,
                dateFormat: "yyyy-mm-dd",
                headerText: function (i) {
                    array = i.split("-");
                    return array[0] + "年" + array[1] + "月" + array[2] + "日"
                }
            })
        } else {
            $("#" + h).mobiscroll().datetime({
                theme: "android-ics light",
                lang: "zh",
                animate: "fade",
                cancelText: null,
                dateFormat: "yyyy-mm-dd",
                maxDate: e,
                minDate: c,
                headerText: function (j) {
                    array = j.split("-");
                    var i = array[2].split(" ");
                    return array[0] + "年" + array[1] + "月" + i[0] + "日 " + i[1]
                },
                timeFormat: "HH:ii"
            })
        }
    };
    a.calculateAge = function (g) {
        var e = g.match(/^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/);
        if (e == null) {
            return false
        }
        var f = new Date(e[1], e[3] - 1, e[4]);
        if (f.getFullYear() == e[1] && (f.getMonth() + 1) == e[3] && f.getDate() == e[4]) {
            var c = new Date().getFullYear();
            return (c - e[1])
        }
        return 0
    };
    a.getURLData = function (g) {
        var h = b.absUrl().split("?");
        var e = "";
        if (h.length >= 2) {
            var d = h[1].split("&");
            if (d.length > 0) {
                for (var f = 0; f < d.length; f++) {
                    var c = d[f].split("=");
                    if (c[0] == g) {
                        e = c[1];
                        break
                    }
                }
            }
        }
        return e
    };
    return a
}]);